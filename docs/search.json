[
  {
    "objectID": "content/prerequisites.html#local-configuration",
    "href": "content/prerequisites.html#local-configuration",
    "title": "Prerequisites",
    "section": "Local configuration",
    "text": "Local configuration\n\nIdeally (though not strictly required), a configured SSH client (it should be already installed on Linux/Mac machines, PuTTY can be set up for Windows).\nIdeally (though not strictly required), a SSH ftp client (Forklift is excellent for Mac, although not free beyond the trial version; cyberduck can be used for Windows; FileZilla can be used for both Mac, Windows and Linux).\nComputer with high-speed internet access (no specific configuration required - everything will be performed on a remote AWS machine).\nZoom visioconference software"
  },
  {
    "objectID": "content/prerequisites.html#remote-configuration",
    "href": "content/prerequisites.html#remote-configuration",
    "title": "Prerequisites",
    "section": "Remote configuration",
    "text": "Remote configuration\nThe AWS machine is running with Ubuntu and has been set up as follows:\n## --- Clean up previous R installs and system libraries\nsudo apt purge r-base* r-recommended r-cran-*\nsudo apt autoremove\nsudo apt update\nsudo apt upgrade\nsudo apt update\n\n## --- Libraries\nsudo apt update\nsudo apt install libc6 libicu60 -y \nsudo apt install -y \\\n    gcc g++ perl python3 python3-pip \\\n    automake make cmake less vim nano fort77 \\\n    wget git curl bzip2 gfortran unzip ftp \\\n    libpng-dev libjpeg-dev \\\n    texlive-latex-base default-jre build-essential \\\n    libbz2-dev liblzma-dev libtool \\\n    libxml2 libxml2-dev zlib1g-dev \\\n    libdb-dev libglu1-mesa-dev zlib1g-dev  \\\n    libncurses5-dev libghc-zlib-dev libncurses-dev \\\n    libpcre3-dev libxml2-dev \\\n    libblas-dev libzmq3-dev libreadline-dev libssl-dev \\\n    libcurl4-openssl-dev libx11-dev libxt-dev \\\n    x11-common libcairo2-dev \\\n    libreadline6-dev libgsl0-dev \\\n    libeigen3-dev libboost-all-dev \\\n    libgtk2.0-dev xvfb xauth xfonts-base \\\n    apt-transport-https libhdf5-serial-dev \\\n    libudunits2-dev libgdal-dev libgeos-dev libproj-dev \\\n    libv8-dev \\\n    libmagick++-dev \\\n    libharfbuzz-dev libfribidi-dev \\\n    fftw3\n\n## --- R base install \nsudo add-apt-repository \"deb https://cloud.r-project.org/bin/linux/ubuntu `lsb_release -cs` -cran40/\"\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nsudo apt update\nsudo apt install r-base r-recommended r-base-core\nThe following packages have been installed (along with their many dependencies, of course!):\n## --- Install important R packages for single-cell RNA-seq projects\n## pak \nsudo Rscript -e 'install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch))'\n\n## CRAN packages\nsudo Rscript -e 'pak::pkg_install(c(\"tidyverse\", \"devtools\", \"umap\", \"corrplot\", \"gam\", \"ggbeeswarm\", \"ggthemes\", \"Matrix\", \"zeallot\", \"fossil\", \"rgl\", \"BiocManager\", \"Seurat\", \"rliger\", \"Signac\", \"multtest\", \"metap\", \"servr\"))'\n\n## Bioconductor Packages\nsudo Rscript -e 'pak::pkg_install(c(\"airway\", \"SingleCellExperiment\", \"scran\", \"scater\", \"batchelor\", \"DropletUtils\", \"AUCell\", \"plyranges\", \"ggraph\", \"clustree\", \"celldex\", \"SingleR\", \"slingshot\", \"tradeSeq\", \"velociraptor\", \"BUSpaRse\", \"org.Mm.eg.db\", \"org.Hs.eg.db\", \"TENxPBMCData\", \"scRNAseq\", \"scDblFinder\", \"chromVAR\", \"EnsDb.Hsapiens.v75\", \"LoomExperiment\", \"biovizBase\", \"rebook\", \"bluster\"))'\n\n## Github Packages\nsudo Rscript -e 'install.packages(\"RcppPlanc\", repos = c(linux = 'https://welch-lab.r-universe.dev/bin/linux/noble/4.4/',sources = 'https://welch-lab.r-universe.dev',cran = 'https://cloud.r-project.org'))'\n\n## For ubuntu &lt; 24.04, instal with makevars: \n\n# withr::with_makevars( c(CFLAGS = \"-w\", CXXFLAGS = \"-w\", CPPFLAGS = \"-w\", LDFLAGS = \"\"), { .... }, assignment = \"+=\")\n\n## --- Install other softwares (fastQC, samtools, cellranger and cellranger indexes, ffq)\n\n# fastqc samtools\nsudo apt install fastqc samtools python3.8\n\n# cellranger\ncd /opt/\nsudo wget -O cellranger-8.0.1.tar.gz \"https://cf.10xgenomics.com/releases/cell-exp/cellranger-8.0.1.tar.gz?Expires=1730426816&Key-Pair-Id=APKAI7S6A5RYOXBWRPDA&Signature=RCkLqP02kkVLRceyojFWbQ4eXrjemlvkAfWxSxbkad0ZqAIjtxTlSsc5Tn3x7PLj-mZiwuTjqx4o~bcR9J5fSBHdtkUrSG~MUqLxquMxcCPom3eR2Or9vdqGvk4faMhv1-jrXS8GCOD82zU8ZdhqecdE5tJdXjLHz6flWo7bQt0jqHF3-roktu0uuXHtebw586Cg39xqzMIG8x9SkeTsRGsJAKB7~jL65YKCEPpAl~QndTghDIymv43gHO8MWiQ7QLbF-nsF16uhqUJR7sAsPZSjCkKPW0GZTIpUmie1nv2OnoenOw9O6-Wj4gIBzcWVHkt-qkmPwvnF3nXq~0xUUw__\"\nsudo tar -xzvf cellranger-8.0.1.tar.gz\nsudo ln -s /opt/cellranger-8.0.1/cellranger /usr/local/bin/cellranger\nsudo wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-mm10-2020-A.tar.gz\nsudo tar -xzvf refdata-gex-mm10-2020-A.tar.gz\nsudo mv refdata-gex-mm10-2020-A ~/Share/\n\n## Copy Share from local to AWS\n# rsync --progress --recursive --verbose ~/Share/ physalia:\n\n# Make sure write permissions are only for the sudo owner, so that userX cannot modify or erase the Share folder and its contents\nsudo chown -R ubuntu:ubuntu ~/Share/\nsudo chmod -R 755 ~/Share\n\n# ffq\nsudo apt install python3-distutils\nsudo pip install ffq\n\n# seqkit\ncd /opt/\nsudo wget -O seqkit_linux_amd64.tar.gz https://github.com/shenwei356/seqkit/releases/download/v2.4.0/seqkit_linux_amd64.tar.gz\nsudo tar -xzvf seqkit_linux_amd64.tar.gz\nsudo ln -s /opt/seqkit /usr/local/bin/seqkit\n\n# bcl2fastq\nsudo apt install alien\ncd /opt/\nsudo wget http://support.illumina.com/content/dam/illumina-support/documents/downloads/software/bcl2fastq/bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo alien bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo dpkg -i bcl2fastq2_0v2.17.1.14-2_amd64.deb\n\n## Add basilisk external dir to system-wide Renviron\nsudo echo \"BASILISK_EXTERNAL_DIR=/opt/basilisk_envs\" &gt;&gt; /etc/R/Renviron"
  },
  {
    "objectID": "content/day4/Lecture6_ATAC.html",
    "href": "content/day4/Lecture6_ATAC.html",
    "title": "12  Lecture 6 - Advances in single-cell genomics: the epigenome",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-19993a053d5b90c39600e9a3527289cd\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;11&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#process-human-pbmc-dataset",
    "href": "content/day4/Lab7_atac-seq.html#process-human-pbmc-dataset",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.1 Process human PBMC dataset",
    "text": "13.1 Process human PBMC dataset\n\n13.1.1 Download data\nData comes from 10X Genomics. Direct download links are provided below.\nDownload the files related to scATACseq of all human PBMC cells.\n\n\n\nR\n\ndir.create('scATAC', showWarnings = FALSE)\noptions(timeout=1000)\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\", \"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed\", \"scATAC/atac_v1_pbmc_10k_peaks.bed\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv\", \"scATAC/atac_v1_pbmc_10k_singlecell.csv\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\")\n\n\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5'\nContent type 'binary/octet-stream' length 79995014 bytes (76.3 MB)\n==================================================\ndownloaded 76.3 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed'\nContent type 'binary/octet-stream' length 2145757 bytes (2.0 MB)\n==================================================\ndownloaded 2.0 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv'\nContent type 'text/csv' length 35207776 bytes (33.6 MB)\n==================================================\ndownloaded 33.6 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz'\nContent type 'text/tab-separated-values' length 1960680306 bytes (1869.9 MB)\n==================================================\ndownloaded 1869.9 MB\n\n\n13.1.2 Import data\nNotice how the count matrix is in a .h5 format. We have already encountered this format in Lab3. Back then, we imported it with DropletUtils::read10xCounts.\n\n\n\n\n\n\nQuestion\n\n\n\nDoes this function work here?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nDropletUtils::read10xCounts(\"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\n\n\nclass: SingleCellExperiment \ndim: 89796 8728 \nmetadata(1): Samples\nassays(1): counts\nrownames(89796): chr1:565107-565550 chr1:569174-569639 ... chrY:59001782-59002175 chrY:59017143-59017246\nrowData names(3): ID Symbol Type\ncolnames: NULL\ncolData names(2): Sample Barcode\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\n\n\n\n\n\n\nThis works because 10X Genomics make sure to distribute files in .h5 format that are consistent accross single-cell sequencing methodologies.\nHowever, the SingleCellExperiment obtained with this approach is not the most convenient, as it cannot natively leverage fragments file (see below).\nInstead, we can create a Signac object, a flavour of Seurat objects.\n\n\n\n\n\n\nQuestion\n\n\n\nImport counts matrix and feature annotations using an import function provided by Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(Seurat)\n\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built under R 4.4.0 but the current version is 4.4.1; it is recomended that you reinstall 'SeuratObject' as the ABI for R may have changed\n\n\n'SeuratObject' was built with package 'Matrix' 1.7.0 but the current version is 1.7.1; it is recomended that you reinstall 'SeuratObject' as the ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(Signac)\nlibrary(rtracklayer)\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nLoading required package: GenomeInfoDb\n\nlibrary(stringr)\ncnts &lt;- Read10X_h5('scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5')\nfeatures &lt;- import('scATAC/atac_v1_pbmc_10k_peaks.bed')\nfeatures$peak &lt;- as.character(features) |&gt; str_replace(':', '-')\nmetadata &lt;- read.csv(\n  file = \"scATAC/atac_v1_pbmc_10k_singlecell.csv\",\n  header = TRUE,\n  row.names = 1\n)\n\n\n\n\nHow many accessible genomic segments were found in this dataset?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nfeatures\n\n\nGRanges object with 89796 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [89792]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [89793]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [89794]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [89795]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [89796]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nlength(features)\n\n[1] 89796\n\n\n\n\n\n\n\n\n13.1.3 Create a Seurat object\nThe next step is to aggregate counts and features into a ChromatinAssay, a scATAC-seq flavour of Seurat standard Assays. The documentation for ?CreateChromatinAssay indicates that the user can provide:\n\nA fragments file, corresponding to the full list of all unique fragments mapped across all single cells.\nGenomic annotations to the ChromatinAssay, corresponding to gene annotations, promoter positions, etc. Such annotations can be generated from Ensembl.\n\n\n\n\n\n\n\nQuestion\n\n\n\nGenerate human annotations from Ensembl using a parsing function from Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Get human gene annotations (hg19/GRCh37) to feed it into the future `ChromatinAssay`\nBiocManager::install('EnsDb.Hsapiens.v75')\n\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see 'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cloud.r-project.org\n\n\nBioconductor version 3.19 (BiocManager 1.30.25), R 4.4.1 (2024-06-14)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use `force = TRUE` to re-install: 'EnsDb.Hsapiens.v75'\n\n\nOld packages: 'boot', 'foreign', 'fs', 'MASS', 'nlme', 'pak', 'progressr', 'R.oo', 'Rcpp', 'rliger', 'spatstat.utils', 'survival', 'tinytex', 'xfun'\n\nannotations &lt;- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75)\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\nseqlevelsStyle(annotations) &lt;- 'UCSC'\n\n\n\n\nCreate a ChromatinAssay using counts, features, fragments and annotations.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Chromatin Assay\nassay &lt;- Signac::CreateChromatinAssay(\n    counts = cnts,\n    ranges = features,\n    fragments = \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\",\n    annotation = annotations,\n    genome = \"hg19\",\n    min.cells = 10, \n    min.features = 10\n)\n\n\nComputing hash\n\nassay\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\n\n\n\n\nWhat are the dimensions of this object? Are they comparable to the count matrix? Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(cnts)\n\n\n[1] 89796  8728\n\ndim(assay)\n\n[1] 87561  8728\n\n\n\n\n\n\n\nIt’s finally time to wrap the ChromatinAssay into a Seurat standard object! This is done using the CreateSeuratObject, as already covered in Lab6\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a Seurat object from the ChromatinAssay object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Seurat object\nPBMC &lt;- Seurat::CreateSeuratObject(\n    counts = assay,\n    assay = 'ATAC', \n    meta.data = metadata[metadata$is__cell_barcode == 1, ]\n)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\nPBMC[['ATAC']]\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\ngranges(PBMC)\n\nGRanges object with 87561 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [87557]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [87558]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [87559]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [87560]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [87561]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nAnnotation(PBMC)\n\nGRanges object with 3072120 ranges and 5 metadata columns:\n                  seqnames        ranges strand |           tx_id   gene_name         gene_id   gene_biotype     type\n                     &lt;Rle&gt;     &lt;IRanges&gt;  &lt;Rle&gt; |     &lt;character&gt; &lt;character&gt;     &lt;character&gt;    &lt;character&gt; &lt;factor&gt;\n  ENSE00001489430     chrX 192989-193061      + | ENST00000399012      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001536003     chrX 192991-193061      + | ENST00000484611      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00002160563     chrX 193020-193061      + | ENST00000430923      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001750899     chrX 197722-197788      + | ENST00000445062      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001489388     chrX 197859-198351      + | ENST00000381657      PLCXD1 ENSG00000182378 protein_coding     exon\n              ...      ...           ...    ... .             ...         ...             ...            ...      ...\n  ENST00000361739    chrMT     7586-8269      + | ENST00000361739      MT-CO2 ENSG00000198712 protein_coding      cds\n  ENST00000361789    chrMT   14747-15887      + | ENST00000361789      MT-CYB ENSG00000198727 protein_coding      cds\n  ENST00000361851    chrMT     8366-8572      + | ENST00000361851     MT-ATP8 ENSG00000228253 protein_coding      cds\n  ENST00000361899    chrMT     8527-9207      + | ENST00000361899     MT-ATP6 ENSG00000198899 protein_coding      cds\n  ENST00000362079    chrMT     9207-9990      + | ENST00000362079      MT-CO3 ENSG00000198938 protein_coding      cds\n  -------\n  seqinfo: 25 sequences (1 circular) from hg19 genome\n\n\n\n\n\n\n\n\n13.1.4 Check QCs\n\n13.1.4.1 Cell-based QCs\nThe fraction of reads in peaks (FRiP) is a good indicator of how well each cell was handled during scATACseq processing.\n\n\n\nR\n\nPBMC$FRiP &lt;- PBMC$peak_region_fragments / PBMC$passed_filters\nPBMC$nCount_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\"))\nPBMC$nFeature_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0)\n\nquantile(PBMC$FRiP, seq(0, 1, 0.1))\n\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n0.027703 0.552667 0.608955 0.640861 0.665830 0.685208 0.701947 0.719937 0.738010 0.760047 0.903831 \n\nquantile(PBMC$nCount_ATAC, seq(0, 1, 0.1))\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n  1710.0   5079.1   7619.8   9522.5  11300.8  13367.5  15754.6  19005.5  23502.6  31316.2 249799.0 \n\nquantile(PBMC$nFeature_ATAC, seq(0, 1, 0.1))\n\n     0%     10%     20%     30%     40%     50%     60%     70%     80%     90%    100% \n  654.0  2308.4  3349.4  4108.1  4765.0  5447.0  6234.2  7100.9  8241.6  9983.4 30313.0 \n\n\n\n13.1.4.2 Peaks-based QCs\n\n\n\n\n\n\nQuestion\n\n\n\nWhich analysis are the fragments required for, exactly?\nCould we still perform normalization/clustering/annotation without them? And motif enrichment analysis?\nSince we do have the fragments file at hand, most of the QC steps are available (e.g. TSSEnrichment, NucleosomeSignal or fragment size distribution). Let’s go through them one by one.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# compute nucleosome signal score per cell\nPBMC &lt;- NucleosomeSignal(object = PBMC)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n# compute TSS enrichment score per cell\nPBMC &lt;- Signac::TSSEnrichment(object = PBMC, fast = FALSE)\n\nExtracting TSS positions\n\n\nFinding + strand cut sites\n\n\nFinding - strand cut sites\n\n\nComputing mean insertion frequency in flanking regions\n\n\nNormalizing TSS score\n\nPBMC\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\nThe TSSPlot function from Signac can be used to plot the fragment count per peak ~ TSS enrichment.\n\n\n\nR\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 3.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 2.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nThe FragmentHistogram function from Signac can be used to plot the fragment size distribution in peaks with different nucleosome signals.\n\n\n\n\n\n\nQuestion\n\n\n\nGroup genomic loci by their nucleosome signal (&gt; 4 or &lt; 4) and plot the fragment size distribution.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nPBMC$nucleosome_group &lt;- ifelse(PBMC$nucleosome_signal &gt; 4, 'NS &gt; 4', 'NS &lt; 4')\nFragmentHistogram(object = PBMC, group.by = 'nucleosome_group')\n\n\nWarning: Removed 92 rows containing non-finite outside the scale range (`stat_bin()`).\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range (`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n13.1.5 Filter cells and features\nJust like standard scRNAseq data, scATACseq data needs to be filtered to remove low-quality cells and peaks.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the Seurat object (cells and features) as deemed appropriate.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Filter data \nPBMC &lt;- subset(PBMC, subset = nCount_ATAC &gt; 3000 & nCount_ATAC &lt; 100000) \nPBMC &lt;- subset(PBMC, subset = nFeature_ATAC &gt; 1000 & nFeature_ATAC &lt; 20000) \nPBMC &lt;- subset(PBMC, subset = FRiP &gt; 0.30) \nPBMC\n\n\nAn object of class Seurat \n87561 features across 8231 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n## - Remove peaks with low coverage\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\")) &gt; 10, ]\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0) &gt; 10, ]\nPBMC\n\nAn object of class Seurat \n87212 features across 8231 samples within 1 assay \nActive assay: ATAC (87212 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\n\n13.1.6 Dimensionality reduction and clustering\nNow that the dataset is filtered, we can proceed to data normalization, dimensionality reduction and clustering. Compared to scRNAseq, scATACseq data is much sparser and has a higher dimensionality. This has important implications for the choice of normalization and dimensionality reduction methods. scATACseq data are generally normalized using a TF-IDF normalization, which is implemented in the RunTFIDF function in Signac, and dimensionality reduction is performed using LSI (Latent Semantic Indexing) implemented in the RunSVD function.\n\n\n\n\n\n\nQuestion\n\n\n\nNormalize then further reduce the dimensionality for visualization purposes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Normalize data \nPBMC &lt;- RunTFIDF(PBMC) \n\n\nPerforming TF-IDF normalization\n\n## - Reduce dimensionality\nPBMC &lt;- FindTopFeatures(PBMC, min.cutoff = 'q50') \nPBMC &lt;- RunSVD(PBMC) \n\nRunning SVD\n\n\nScaling cell embeddings\n\n## - Embed in 2D UMAP\nPBMC &lt;- RunUMAP(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n16:17:56 UMAP embedding parameters a = 0.9922 b = 1.112\n\n\n16:17:56 Read 8231 rows and found 29 numeric columns\n\n\n16:17:56 Using Annoy for neighbor search, n_neighbors = 30\n\n\n16:17:56 Building Annoy index with metric = cosine, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n16:17:57 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//Rtmpk6RpxF/filece145462ba11\n16:17:57 Searching Annoy index using 1 thread, search_k = 3000\n16:17:59 Annoy recall = 100%\n16:18:00 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n16:18:02 Initializing from normalized Laplacian + noise (using RSpectra)\n16:18:02 Commencing optimization for 500 epochs, with 316686 positive edges\n16:18:10 Optimization finished\n\n## - Cluster cells\nPBMC &lt;- FindNeighbors(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nComputing nearest neighbor graph\nComputing SNN\n\nPBMC &lt;- FindClusters(object = PBMC, verbose = FALSE, algorithm = 3)\n\n## - Visualize data \nDimPlot(PBMC, label = TRUE) + NoLegend()\n\n\n\n\n\n\n\nWhat can you observe in the UMAP projection of the dataset? Comment on the separation of some cell types into different spatially-resolved clusters."
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#compute-gene-activity-scores",
    "href": "content/day4/Lab7_atac-seq.html#compute-gene-activity-scores",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.2 Compute gene activity scores",
    "text": "13.2 Compute gene activity scores\nSignac’s GeneActivity() function require scATACseq fragment information. Since we have them, we can estimate a gene activity score for each gene in the annotations.\n\n\n\nR\n\ngene.activities &lt;- GeneActivity(PBMC)\n\n\nExtracting gene coordinates\n\n\nWarning in SingleFeatureMatrix(fragment = fragments[[x]], features = features, : 13 features are on seqnames not present in the fragment file. These will be removed.\n\n\nExtracting reads overlapping genomic regions\n\n\nWe can now save this new object as an Assay in the PBMC object and normalize it.\n\n\n\nR\n\nPBMC[['RNA']] &lt;- CreateAssayObject(counts = gene.activities)\n\n\nWarning: Non-unique features (rownames) present in the input matrix, making unique\n\n# - Normalize the new RNA assay, this time with `SCTransform`\noptions('future.globals.maxSize' = 2e9)\nPBMC &lt;- SCTransform(\n  object = PBMC,\n  assay = 'RNA',\n)\n\nRunning SCTransform on assay: RNA\n\n\nvst.flavor='v2' set. Using model with fixed slope and excluding poisson genes.\n\n\nCalculating cell attributes from input UMI matrix: log_umi\n\n\nVariance stabilizing transformation of count matrix of size 19682 by 8231\n\n\nModel formula is y ~ log_umi\n\n\nGet Negative Binomial regression parameters per gene\n\n\nUsing 2000 genes, 5000 cells\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nFound 11 outliers - those will be ignored in fitting/regularization step\n\n\nSecond step: Get residuals using fitted parameters for 19682 genes\n\n\nComputing corrected count matrix for 19682 genes\n\n\nCalculating gene attributes\n\n\nWall clock passed: Time difference of 33.542 secs\n\n\nDetermine variable features\n\n\nCentering data matrix\n\n\nPlace corrected count matrix in counts slot\n\n\nSet default assay to SCT\n\nPBMC\n\nAn object of class Seurat \n126904 features across 8231 samples within 3 assays \nActive assay: SCT (19682 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: ATAC, RNA\n 2 dimensional reductions calculated: lsi, umap\n\n\nOne can now visualize expression of individual markers across clusters to infer cluster identity.\n\n\n\n\n\n\nQuestion\n\n\n\nAssess the expression of known markers across clusters, projecting the cells in a 2D UMAP.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nVlnPlot(\n  object = PBMC,\n  features = c(\n    'MS4A1', # B-cell\n    'CD3D', # T-cell\n    'NKG7', # NK cell\n    'TREM1' # Monocytes\n  ), \n  assay = \"SCT\"\n)\n\n\n\n\nPBMC$annotation &lt;- dplyr::case_when(\n  Idents(PBMC) %in% c(0, 5, 9, 12) ~ \"Monocytes\", \n  Idents(PBMC) %in% c(1, 2, 3, 4, 7, 10) ~ \"T-cells\", \n  Idents(PBMC) %in% c(6) ~ \"NK-cells\", \n  Idents(PBMC) %in% c(8, 11) ~ \"B-cells\", \n  Idents(PBMC) %in% c(13, 14) ~ \"DC\"\n)\nDimPlot(PBMC, group.by = 'annotation', label = TRUE) + NoLegend()"
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "href": "content/day4/Lab7_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.3 Find peaks differentially accessible across clusters",
    "text": "13.3 Find peaks differentially accessible across clusters\nFinally, we can perform differential peak accessibility analysis to identify peaks that are differentially accessible between clusters. This is done using the FindMarkers function in Signac, which is similar to FindAllMarkers in Seurat.\n\n\n\nR\n\nIdents(PBMC) &lt;- PBMC$annotation\nda_peaks &lt;- FindMarkers(\n  object = PBMC,\n  ident.1 = \"Monocytes\",\n  ident.2 = \"B-cells\",\n  test.use = 'LR',\n  latent.vars = 'nCount_ATAC'\n)\n\n\nWarning: The following arguments are not used: norm.method\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nVlnPlot(\n  object = PBMC,\n  features = rownames(da_peaks)[1],\n  pt.size = 0.1,\n  idents = c(\"Monocytes\",\"B-cells\")\n)"
  },
  {
    "objectID": "content/day4/Lecture7_pseudotime.html",
    "href": "content/day4/Lecture7_pseudotime.html",
    "title": "14  Lecture 7 - Trajectories and pseudotimes",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-35204b7a6d44e5967906c90cbdda8417\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab8_pseudotime.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;15&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#process-testis-data-in-r",
    "href": "content/day4/Lab8_pseudotime.html#process-testis-data-in-r",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.1 Process testis data in R",
    "text": "15.1 Process testis data in R\n\n15.1.1 Import testis data from GSE112013 and pre-process it\nWe will work on a testis dataset, from the “The adult human testis transcriptional cell atlas” study (Guo et al., 2018). This dataset contains single-cell RNAseq data from human testis. It is available on the GEO database under the accession number GSE112013.\nThe pre-processing of the testis dataset has already been done for you. We have applied the different analysis steps we have learned over the past three days to the count matrix GSE112013_Combined_UMI_table.txt.gz. See the code below for the details of pre-processing steps.\n\n\n\n\n\n\n👀 Data pre-processing 👇\n\n\n\n\n\nCheck the GEO page for supplementary processed data, and download the GSE112013_Combined_UMI_table.txt.gz table.\nWith this data, we will:\n\nImport the dataset in R as a SingleCellExperiment object,\nRemove doublets,\nFilter genes,\nNormalize counts,\nCorrect for batch effect,\nCluster cells.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nlibrary(tidyverse)\n\n# Download raw file\ndir.create('Guo_testis')\ndownload.file(\n    'https://ftp.ncbi.nlm.nih.gov/geo/series/GSE112nnn/GSE112013/suppl/GSE112013_Combined_UMI_table.txt.gz', \n    'Guo_testis/GSE112013_Combined_UMI_table.txt.gz'\n)\nsystem('gunzip Guo_testis/GSE112013_Combined_UMI_table.txt.gz')\n\n# Create SingleCellExperiment object\nx &lt;- vroom::vroom('Guo_testis/GSE112013_Combined_UMI_table.txt')\ncounts &lt;- as.matrix(x[, -1])\ncounts &lt;- as(counts, 'dgCMatrix')\ngenes &lt;- as.data.frame(x[, 1])\ncells &lt;- data.frame(cellid = colnames(x[, -1]))\ntestis &lt;- SingleCellExperiment(\n    assays = list(counts = counts), \n    colData = cells, \n    rowData = genes\n)\ntestis$Barcode &lt;- str_replace(testis$cellid, 'Donor.-', '') |&gt; str_replace('-.', '')\ntestis &lt;- testis[, !duplicated(testis$Barcode)]\ntestis$donor &lt;- str_replace(testis$cellid, '-.*', '')\ntestis$replicate &lt;- str_replace(testis$cellid, '.*-', '')\nrownames(testis) &lt;- rowData(testis)$Gene\nset.seed(1000)\n\n# Remove doublets\ntestis &lt;- scDblFinder::scDblFinder(testis)\ntestis &lt;- testis[, testis$scDblFinder.class == 'singlet']\n\n# Recover human genomic, protein-coding gene informations\nlibrary(plyranges)\nah &lt;- AnnotationHub::AnnotationHub()\nAnnotationHub::query(ah, c('gene annotation', 'ensembl', '102', 'homo_sapiens', 'GRCh38'))\ngtf &lt;- AnnotationHub::query(ah, c('Homo_sapiens.GRCh38.102.chr.gtf'))[[1]]\ngenes &lt;- gtf |&gt; \n    filter(type == 'gene') |&gt; \n    filter(gene_biotype == 'protein_coding') |&gt; \n    filter(gene_source == 'ensembl_havana') \ngenes &lt;- genes[!duplicated(genes$gene_name)]\n\n# Annotate genes in testis dataset and filter out non-relevant genes\ntestis &lt;- testis[genes$gene_name[genes$gene_name %in% rownames(testis)], ]\nrowRanges(testis) &lt;- genes[match(rownames(testis), genes$gene_name)]\nrowData(testis) &lt;- rowData(testis)[, c('gene_name', 'gene_id')]\nrownames(testis) &lt;- scuttle::uniquifyFeatureNames(rowData(testis)$gene_id, rowData(testis)$gene_name)\n\n# Get preliminary QCs per cell and per gene\ntestis &lt;- scuttle::addPerCellQCMetrics(testis)\ntestis &lt;- scuttle::addPerFeatureQCMetrics(testis)\n\n# Filter out genes not expressed in at least 10 cells\ntestis &lt;- testis[rowSums(assay(testis, 'counts') &gt; 0) &gt;= 10, ]\n\n# Normalize counts using VST\ncnts &lt;- as(assay(testis, 'counts'), 'dgCMatrix')\ncolnames(cnts) &lt;- testis$cellid\nrownames(cnts) &lt;- rownames(testis)\ntestis_vst &lt;- sctransform::vst(cnts, return_cell_attr = TRUE)\ncorrected_cnts &lt;- sctransform::correct(testis_vst)\nassay(testis, 'corrected_counts', withDimnames = FALSE) &lt;- corrected_cnts\nassay(testis, 'logcounts', withDimnames = FALSE) &lt;- log1p(corrected_cnts)\n\n# Computing biological variance of each gene\ntestis_variance &lt;- scran::modelGeneVar(testis)\nHVGs &lt;- scran::getTopHVGs(testis_variance, prop = 0.1)\nrowData(testis)$isHVG &lt;- rownames(testis) %in% HVGs\n\n# Embedding dataset in PCA space, correcting for batch effect\nmergedBatches &lt;- batchelor::fastMNN(\n    testis, \n    batch = testis$donor, \n    subset.row = HVGs, \n    BPPARAM = BiocParallel::MulticoreParam(workers = 12)\n)\nreducedDim(testis, 'corrected') &lt;- reducedDim(mergedBatches, 'corrected')\n\n# Embedding dataset in shared k-nearest neighbors graph for clustering \ngraph &lt;- scran::buildSNNGraph(testis, use.dimred = 'corrected')\n\n# Cluster cells using Louvain community finding algorithm\ntestis_clust &lt;- igraph::cluster_louvain(graph)$membership\ntable(testis_clust)\ntestis$cluster &lt;- factor(testis_clust)\n\n# Embedding dataset in TSNE space for visualization\nset.seed(10)\ntestis &lt;- scater::runTSNE(testis, dimred = 'corrected')\n\n# Visualize embeddings\np &lt;- cowplot::plot_grid(\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'cluster'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'cluster')\n)\np\nsaveRDS(testis, '~/Share/Guo_testis.rds')\n\n\n\n\n\n\n15.1.2 Annotate cells using HPA resources\nThe Human Protein Atlas (HPA) is a valuable resource for cell type annotations. It provides single-cell RNAseq data for a large number of cell types.\n\n\n\n\n\n\nQuestion\n\n\n\nDownload HPA scRNAseq atlas (combined per cell type) from here, and import it in R as a SummarizedExperiment object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ dplyr::collapse()     masks IRanges::collapse()\n✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second&lt;-() masks S4Vectors::second&lt;-()\n✖ dplyr::slice()        masks IRanges::slice()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nHPA &lt;- read_tsv('~/Share/rna_single_cell_type.tsv.zip') |&gt; \n    pivot_wider(names_from = `Cell type`, values_from = 'nTPM') |&gt; \n    dplyr::select(-Gene) |&gt; \n    distinct(`Gene name`, .keep_all = TRUE) |&gt; \n    column_to_rownames('Gene name')\n\nRows: 1626642 Columns: 4\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (3): Gene, Gene name, Cell type\ndbl (1): nTPM\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nHPA_se &lt;- SummarizedExperiment::SummarizedExperiment(HPA, colData = tibble(cell_type = colnames(HPA)), assays = list('logcounts' = HPA))\n\n\n\n\nHow many and what cell types are profiled?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlength(HPA_se$cell_type)\n\n\n[1] 81\n\nHPA_se$cell_type\n\n [1] \"Adipocytes\"                      \"Alveolar cells type 1\"           \"Alveolar cells type 2\"           \"Astrocytes\"                      \"B-cells\"                        \n [6] \"Basal keratinocytes\"             \"Basal prostatic cells\"           \"Basal respiratory cells\"         \"Basal squamous epithelial cells\" \"Bipolar cells\"                  \n[11] \"Breast glandular cells\"          \"Breast myoepithelial cells\"      \"Cardiomyocytes\"                  \"Cholangiocytes\"                  \"Ciliated cells\"                 \n[16] \"Club cells\"                      \"Collecting duct cells\"           \"Cone photoreceptor cells\"        \"Cytotrophoblasts\"                \"dendritic cells\"                \n[21] \"Distal enterocytes\"              \"Distal tubular cells\"            \"Ductal cells\"                    \"Early spermatids\"                \"Endometrial stromal cells\"      \n[26] \"Endothelial cells\"               \"Enteroendocrine cells\"           \"Erythroid cells\"                 \"Excitatory neurons\"              \"Exocrine glandular cells\"       \n[31] \"Extravillous trophoblasts\"       \"Fibroblasts\"                     \"Gastric mucus-secreting cells\"   \"Glandular and luminal cells\"     \"granulocytes\"                   \n[36] \"Granulosa cells\"                 \"Hepatocytes\"                     \"Hofbauer cells\"                  \"Horizontal cells\"                \"Inhibitory neurons\"             \n[41] \"Intestinal goblet cells\"         \"Ionocytes\"                       \"Kupffer cells\"                   \"Langerhans cells\"                \"Late spermatids\"                \n[46] \"Leydig cells\"                    \"Lymphatic endothelial cells\"     \"Macrophages\"                     \"Melanocytes\"                     \"Mesothelial cells\"              \n[51] \"Microglial cells\"                \"monocytes\"                       \"Mucus glandular cells\"           \"Muller glia cells\"               \"NK-cells\"                       \n[56] \"Oligodendrocyte precursor cells\" \"Oligodendrocytes\"                \"Oocytes\"                         \"Ovarian stromal cells\"           \"Pancreatic endocrine cells\"     \n[61] \"Paneth cells\"                    \"Peritubular cells\"               \"Plasma cells\"                    \"Prostatic glandular cells\"       \"Proximal enterocytes\"           \n[66] \"Proximal tubular cells\"          \"Rod photoreceptor cells\"         \"Salivary duct cells\"             \"Schwann cells\"                   \"Secretory cells\"                \n[71] \"Serous glandular cells\"          \"Sertoli cells\"                   \"Skeletal myocytes\"               \"Smooth muscle cells\"             \"Spermatocytes\"                  \n[76] \"Spermatogonia\"                   \"Squamous epithelial cells\"       \"Suprabasal keratinocytes\"        \"Syncytiotrophoblasts\"            \"T-cells\"                        \n[81] \"Undifferentiated cells\"         \n\n\n\n\n\n\n\nWe can use the HPA reference to annotate cell types in the testis dataset.\n\n\n\n\n\n\nQuestion\n\n\n\nUse SingleR to annotate cell types in the testis dataset using HPA reference.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntestis &lt;- readRDS('~/Share/Guo_testis.rds')\npredictions &lt;- SingleR::SingleR(\n    test = testis, \n    ref = HPA_se, \n    labels = colData(HPA_se)$cell_type, \n    clusters = testis$cluster\n)\ntestis$annotation &lt;- predictions$labels[testis$cluster]\ncowplot::plot_grid(\n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, PCA, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'annotation', text_by = 'annotation') + ggtitle('PCA, Annotations transferred from HPA'),\n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, tSNE, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'annotation', text_by = 'annotation') + ggtitle('tSNE, Annotations transferred from HPA')\n)\n\n\n\n\n\n\n\n\n\n\n\n15.1.3 Filter the testis dataset to only germinal cells.\nIn this notebook, we will focus on germinal cells only.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the testis dataset to only retain germinal cells.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngermcells &lt;- testis[\n    , \n    testis$annotation %in% c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")\n]"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "href": "content/day4/Lab8_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.2 Trajectory inference (TI) in scRNAseq",
    "text": "15.2 Trajectory inference (TI) in scRNAseq\nAn important question in scRNAseq field of research is: how to identify a cell trajectory from high-dimensional expression data and map individual cells onto it? A large number of methods have currently emerged, each one with their own specificities, assumptions, and strengths. A nice breakdown (from 2019, so already very outdated!) is available from Saelens et al., Nat. Biotech. 2018 (doi: 10.1038/s41587-019-0071-9):\n\n\n15.2.1 Trajectory\nSlingshot is perhaps one of the most widely used algorithms for users who want to focus on R-based approaches.\n\n\n\n\n\n\nQuestion\n\n\n\nRead Slingshot documentation to understand how to identify lineages in a scRNAseq dataset in R.\nWhy is it recommended to infer lineages from PCA space rather than t-SNE or UMAP space, even though these spaces do “reveal” an obvious trajectory in 2D?\nInfer lineages, using cluster annotations as information to build the MST. Note that you will first need to remove the 50th PCA dimension for slingshot to work (bug reported).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nreducedDim(germcells, 'corrected_2') &lt;- reducedDim(germcells, 'corrected')[, 1:49]\ngermcells_slingshot &lt;- slingshot::slingshot(\n    germcells, \n    reducedDim = 'corrected_2', \n    clusterLabels = germcells$annotation\n)\nslingshot::slingLineages(germcells_slingshot)\n\n\n$Lineage1\n[1] \"Late spermatids\"  \"Early spermatids\" \"Spermatocytes\"    \"Spermatogonia\"   \n\n\n\n\n\n\n\n\n15.2.2 Pseudotime\nslingshot automatically deduces a pseudotime for each cell, based on the inferred lineage. It can be useful to visualize the trajectory of cells in a 2D space, and to order cells along the trajectory.\n\n\n\n\n\n\nQuestion\n\n\n\nRecover pseudotime values and principal curves from slingshot output.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Fetching pseudotime\ngermcells$pseudotime &lt;- slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']\n\n# Fetching principal curve in PCA space\npca_curve &lt;- slingshot::slingCurves(germcells_slingshot, as.df = TRUE)\ncolnames(pca_curve) &lt;- paste0('PC', 1:ncol(pca_curve))\nhead(pca_curve)\n\n\n      PC1     PC2      PC3      PC4      PC5       PC6     PC7        PC8      PC9      PC10     PC11        PC12      PC13      PC14      PC15     PC16       PC17      PC18       PC19      PC20\n1 0.53255 0.12770 -0.33383 0.036078 -0.28674 -0.042046 0.13734 -0.0099950 0.026943 -0.050426 0.029891  0.00523859 -0.018911 -0.025575 -0.010748 0.020062 -0.0040499 0.0059456 -0.0089460 -0.016504\n2 0.53314 0.12574 -0.32473 0.034858 -0.27366 -0.040134 0.13099 -0.0091373 0.025707 -0.047675 0.027900  0.00369063 -0.019211 -0.024697 -0.011852 0.021232 -0.0056933 0.0081235 -0.0086916 -0.018824\n3 0.53373 0.12378 -0.31562 0.033638 -0.26059 -0.038223 0.12463 -0.0082795 0.024471 -0.044924 0.025909  0.00214267 -0.019511 -0.023819 -0.012955 0.022401 -0.0073367 0.0103014 -0.0084373 -0.021144\n4 0.53432 0.12182 -0.30652 0.032417 -0.24752 -0.036311 0.11828 -0.0074218 0.023234 -0.042174 0.023918  0.00059497 -0.019812 -0.022941 -0.014059 0.023570 -0.0089799 0.0124791 -0.0081829 -0.023463\n5 0.53491 0.11986 -0.29741 0.031197 -0.23445 -0.034396 0.11193 -0.0065652 0.022000 -0.039433 0.021936 -0.00094697 -0.020113 -0.022066 -0.015167 0.024740 -0.0106199 0.0146528 -0.0079287 -0.025777\n6 0.53549 0.11789 -0.28827 0.029976 -0.22137 -0.032474 0.10560 -0.0057110 0.020771 -0.036713 0.019972 -0.00247587 -0.020416 -0.021198 -0.016285 0.025909 -0.0122525 0.0168175 -0.0076749 -0.028076\n         PC21      PC22       PC23      PC24        PC25      PC26      PC27       PC28       PC29       PC30      PC31       PC32       PC33      PC34        PC35      PC36       PC37       PC38\n1 -0.00292927 -0.017404 -0.0087785 0.0074640  5.4695e-05 0.0100871 -0.010260 -0.0035944 -0.0062462 -0.0068927 0.0078310 -0.0015015 -0.0060110 0.0087654 -5.8788e-04 0.0083160 -0.0041018 -0.0025883\n2 -0.00236729 -0.017099 -0.0093209 0.0071747 -6.9630e-04 0.0100163 -0.010516 -0.0036699 -0.0069872 -0.0065120 0.0080722 -0.0016012 -0.0054229 0.0086525 -2.6930e-04 0.0082659 -0.0044179 -0.0028582\n3 -0.00180531 -0.016794 -0.0098634 0.0068854 -1.4473e-03 0.0099455 -0.010772 -0.0037454 -0.0077282 -0.0061313 0.0083134 -0.0017009 -0.0048349 0.0085396  4.9288e-05 0.0082158 -0.0047340 -0.0031281\n4 -0.00124336 -0.016489 -0.0104058 0.0065961 -2.1982e-03 0.0098747 -0.011028 -0.0038209 -0.0084691 -0.0057504 0.0085546 -0.0018006 -0.0042468 0.0084266  3.6783e-04 0.0081658 -0.0050501 -0.0033981\n5 -0.00068232 -0.016182 -0.0109479 0.0063063 -2.9476e-03 0.0098036 -0.011285 -0.0038952 -0.0092075 -0.0053672 0.0087948 -0.0019006 -0.0036577 0.0083132  6.8528e-04 0.0081161 -0.0053667 -0.0036683\n6 -0.00012305 -0.015872 -0.0114893 0.0060156 -3.6933e-03 0.0097315 -0.011544 -0.0039673 -0.0099406 -0.0049789 0.0090328 -0.0020012 -0.0030666 0.0081991  1.0003e-03 0.0080672 -0.0056841 -0.0039391\n       PC39      PC40        PC41      PC42       PC43       PC44       PC45      PC46       PC47        PC48        PC49 PC50 PC51\n1 0.0057976 0.0010192 -1.1903e-03 0.0024878 -0.0027841 0.00064003 0.00340531 0.0053154 -0.0028912 -0.00019255 -0.00221046    1    1\n2 0.0060588 0.0015296 -9.6893e-04 0.0026406 -0.0026553 0.00071086 0.00282910 0.0048515 -0.0025377 -0.00027362 -0.00173842    2    1\n3 0.0063200 0.0020400 -7.4761e-04 0.0027933 -0.0025265 0.00078169 0.00225288 0.0043876 -0.0021843 -0.00035469 -0.00126638    3    1\n4 0.0065813 0.0025503 -5.2628e-04 0.0029460 -0.0023976 0.00085250 0.00167667 0.0039237 -0.0018308 -0.00043577 -0.00079433    4    1\n5 0.0068431 0.0030609 -3.0488e-04 0.0030985 -0.0022684 0.00092308 0.00110042 0.0034599 -0.0014773 -0.00051683 -0.00032216    5    1\n6 0.0071058 0.0035716 -8.3373e-05 0.0032503 -0.0021385 0.00099312 0.00052435 0.0029962 -0.0011239 -0.00059804  0.00015009    6    1\n\n\n\n\n\nWe would like to visualize the trajectory of cells in our TSNE space, but the principal curve is only available in PCA space. We can use slingshot to embed it in the TSNE space!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntsne_curve &lt;- slingshot::embedCurves(germcells_slingshot, 'TSNE', smoother = 'loess', span = 0.1) |&gt; \n    slingshot::slingCurves(as.df = TRUE)\ntsne_curve &lt;- tsne_curve[order(tsne_curve$Order), ]\nhead(tsne_curve)\n\n\n                           TSNE1  TSNE2 Order Lineage\nDonor3-AACTCCCGTCTGGTCG-2 -25.23 11.729     1       1\nDonor1-GGGATGACATTCTCAT-2 -25.23 11.729     2       1\nDonor1-CGCTTCATCTAACTGG-1 -25.23 11.729     3       1\nDonor1-GGGTCTGAGCTGATAA-2 -25.23 11.729     4       1\nDonor1-CGGACACTCAGCAACT-1 -25.23 11.729     5       1\nDonor1-GGATTACAGTCAATAG-2 -25.23 11.729     6       1\n\n\n\n\n\nPlot PCA and tSNE embeddings, coloring cells by either their annotation or their pseudotime value. Overlay the principal curves to each embedding.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndf &lt;- tibble(\n    PC1 = reducedDim(germcells, 'corrected')[,1], \n    PC2 = reducedDim(germcells, 'corrected')[,2], \n    TSNE1 = reducedDim(germcells, 'TSNE')[,1], \n    TSNE2 = reducedDim(germcells, 'TSNE')[,2], \n    annotation = germcells$annotation, \n    pseudotime = germcells$pseudotime\n)\ncowplot::plot_grid(\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = annotation)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = annotation)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = pseudotime)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = pseudotime)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed()\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck the distribution of pseudotime values across the different cell clusters.\nWhat do you observe? Where you expecting this?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntibble(\n    annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n    pseudotime = germcells$pseudotime\n) |&gt; \n    ggplot(aes(x = annotation, y = pseudotime, fill = annotation)) + \n    geom_violin(scale = 'width') + \n    geom_boxplot(outlier.shape = NULL, width = 0.1, fill = 'white') + \n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) \n\n\n\n\n\n\n\n\nCorrect pseudotime values as you would expect it to be\n\n\n\nR\n\ngermcells$pseudotime &lt;- scales::rescale((-1 * slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']), c(0, 1))\n\n\n\n\n\n15.2.3 BONUS: Daunting snippet but that makes a cool figure for a paper: modeling pseudotime-dependent gene expression\nUsing pseudotime / cell, one can model gene expression along the differentiation process. This alleviates the need to study gene expression per cell, and allows one to focus on process-related effects (e.g. gene expression during a developmental trajectory).\n\n\n\n\n\n\nQuestion\n\n\n\nTry to do so for few markers of spermatogonia, spermatocytes and spermatids.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngenes &lt;- c('ID4', 'SYCP3', 'DMC1', 'ACR', 'PRM1', 'PGK2')\nfitExprs &lt;- logcounts(germcells[genes, ]) |&gt; # ----------------------------------- Get norm. counts for genes of interest\n    as.matrix() |&gt; \n    t() |&gt; \n    as_tibble() |&gt; \n    mutate(  # ----------------------------------------------------------------- Add information for each cell\n        cellID = colnames(germcells), \n        annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n        pseudotime = germcells$pseudotime\n    ) |&gt; \n    pivot_longer(contains(genes), names_to = 'gene', values_to = 'obs_expr') |&gt; # - Pivot in \"long\" tidy format \n    mutate(gene = factor(gene, genes)) |&gt; \n    group_by(gene) |&gt; # ------------------------------------------------------- Group rows by genes\n    nest(.key = 'data') |&gt; # -------------------------------------------------- For each gene, extract the subtable into a column named data\n    mutate(\n        gamModel = map(data, ~mgcv::gam(obs_expr ~ s(pseudotime, bs = \"cs\"), data = .)), \n        gamFitted_expr = map(gamModel, predict) # ------------------------------ For each gene, fit the expression values ~ pseudotime with a GAM\n    ) |&gt; \n    dplyr::select(-ends_with('Model')) |&gt; \n    unnest(c(data, ends_with('_expr'))) # -------------------------------------- Unnest all the modelled expressions\nggplot(fitExprs) + \n    geom_point(aes(x = pseudotime, y = obs_expr, col = annotation), alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = 'white', size = 2, alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = '#af2d0c', size = 1) +\n    theme_bw() + \n    facet_grid(gene~., scales = 'free') + \n    labs(y = 'logcounts') + \n    ggtitle('Fitted models of pseudotime-dependent gene expression')\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "href": "content/day4/Lab8_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.3 Ordering trajectory with RNA velocity",
    "text": "15.3 Ordering trajectory with RNA velocity\nAs we saw earlier, TI does not necessarily know which direction is right for a given trajectory. This orientation can be sometimes refined using RNA velocity. Let’s see whether RNA velocity helps orientating our spermatocyte differentiation lineage trajectory here.\n\n\n\n\n\n\nQuestion\n\n\n\n\nRead velociraptor documentation. What do you need to compute RNA velocity scores in R?\nImport spliced and unspliced counts computed with velocyto in R.\nTry and compute RNA velocity.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Import entire GSE112013 dataset with spliced/unspliced counts \nfull_GSE112013_counts &lt;- LoomExperiment::import('~/Share/Guo_testis/Guo_testis_full-counts.loom')\nfull_GSE112013_counts\n\n## - Filter `germcells` genes and cells to only retain those present in `full_GSE112013_counts`\ngermcells &lt;- germcells[\n    rowData(germcells)$gene_id %in% rowData(full_GSE112013_counts)$Accession, \n    germcells$Barcode %in% full_GSE112013_counts$Barcode\n]\n\n## - Reorder rows of `full_GSE112013_counts_germcells` to match those of `germcells`\nfull_GSE112013_counts_germcells &lt;- full_GSE112013_counts[match(rowData(germcells)$gene_id, rowData(full_GSE112013_counts)$Accession), match(germcells$Barcode, full_GSE112013_counts$Barcode)]\ndim(germcells)\ndim(full_GSE112013_counts_germcells)\n\n## - Add spliced/unspliced counts to germcells\nassay(germcells, 'spliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'spliced'), 'dgCMatrix')\nassay(germcells, 'unspliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'unspliced'), 'dgCMatrix')\ngermcells\n\n## - Run velociraptor\nvelo_out &lt;- velociraptor::scvelo(\n    germcells, \n    assay.X = \"counts\", \n    subset.row = rowData(germcells)$isHVG, \n    use.dimred = \"corrected\"\n)\nvelo_out\n\n\n\n\n\n\n\n\nEmbed the velocity field in tSNE scRNAseq embedding and plot the RNA velocity field on top of tSNE projection. Conclude.\n\n\n\n\nR\n\nembedded_velo &lt;- velociraptor::embedVelocity(reducedDim(germcells, \"TSNE\"), velo_out)\nhead(embedded_velo)\ngrid_df &lt;- velociraptor::gridVectors(reducedDim(germcells, \"TSNE\"), embedded_velo, resolution = 30, scale = TRUE)\nhead(grid_df)\nscater::plotReducedDim(germcells, 'TSNE', colour_by = \"annotation\", point_alpha = 0.5) +\n    geom_segment(\n        data = grid_df, \n        mapping = aes(x = start.1, y = start.2, xend = end.1, yend = end.2), \n        arrow = arrow(length = unit(0.05, \"inches\"), type = \"closed\")\n    )"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#session-info",
    "href": "content/day4/Lab8_pseudotime.html#session-info",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.4 Session info",
    "text": "15.4 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package              * version date (UTC) lib source\n abind                  1.4-8   2024-09-12 [1] CRAN (R 4.4.1)\n beachmat               2.20.0  2024-05-06 [1] Bioconduc~\n beeswarm               0.4.0   2021-06-01 [1] CRAN (R 4.4.0)\n Biobase              * 2.64.0  2024-04-30 [1] Bioconduc~\n BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconduc~\n BiocNeighbors          1.22.0  2024-04-30 [1] Bioconduc~\n BiocParallel           1.38.0  2024-04-30 [1] Bioconduc~\n BiocSingular           1.20.0  2024-04-30 [1] Bioconduc~\n bit                    4.5.0   2024-09-20 [1] CRAN (R 4.4.1)\n bit64                  4.5.2   2024-09-22 [1] CRAN (R 4.4.1)\n cachem                 1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli                    3.6.3   2024-06-21 [1] CRAN (R 4.4.0)\n codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)\n colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.0)\n cowplot                1.1.3   2024-01-22 [1] CRAN (R 4.4.0)\n crayon                 1.5.3   2024-06-20 [1] CRAN (R 4.4.0)\n DelayedArray           0.30.1  2024-05-30 [1] Bioconduc~\n DelayedMatrixStats     1.26.0  2024-04-30 [1] Bioconduc~\n devtools               2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest                 0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n dplyr                * 1.1.4   2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis               0.3.2   2021-04-29 [1] CRAN (R 4.4.0)\n evaluate               1.0.1   2024-10-10 [1] CRAN (R 4.4.1)\n fansi                  1.0.6   2023-12-08 [1] CRAN (R 4.4.0)\n farver                 2.1.2   2024-05-13 [1] CRAN (R 4.4.0)\n fastmap                1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n forcats              * 1.0.0   2023-01-29 [1] CRAN (R 4.4.0)\n fs                     1.6.4   2024-04-25 [1] CRAN (R 4.4.0)\n generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.0)\n GenomeInfoDb         * 1.40.1  2024-06-16 [1] Bioconduc~\n GenomeInfoDbData       1.2.12  2024-10-29 [1] Bioconductor\n GenomicRanges        * 1.56.2  2024-10-09 [1] Bioconduc~\n ggbeeswarm             0.7.2   2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2              * 3.5.1   2024-04-23 [1] CRAN (R 4.4.0)\n ggrepel                0.9.6   2024-09-07 [1] CRAN (R 4.4.1)\n glue                   1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.0)\n gtable                 0.3.6   2024-10-25 [1] CRAN (R 4.4.1)\n hms                    1.1.3   2023-03-21 [1] CRAN (R 4.4.0)\n htmltools              0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets            1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv                 1.6.15  2024-03-26 [1] CRAN (R 4.4.0)\n httr                   1.4.7   2023-08-15 [1] CRAN (R 4.4.0)\n igraph                 2.1.1   2024-10-19 [1] CRAN (R 4.4.1)\n IRanges              * 2.38.1  2024-07-03 [1] Bioconduc~\n irlba                  2.3.5.1 2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite               1.8.9   2024-09-20 [1] CRAN (R 4.4.1)\n knitr                  1.48    2024-07-07 [1] CRAN (R 4.4.0)\n labeling               0.4.3   2023-08-29 [1] CRAN (R 4.4.0)\n later                  1.3.2   2023-12-06 [1] CRAN (R 4.4.0)\n lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)\n lifecycle              1.0.4   2023-11-07 [1] CRAN (R 4.4.0)\n lubridate            * 1.9.3   2023-09-27 [1] CRAN (R 4.4.0)\n magrittr               2.0.3   2022-03-30 [1] CRAN (R 4.4.0)\n Matrix                 1.7-1   2024-10-18 [1] CRAN (R 4.4.1)\n MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconduc~\n matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)\n memoise                2.0.1   2021-11-26 [1] CRAN (R 4.4.0)\n mgcv                   1.9-1   2023-12-21 [1] CRAN (R 4.4.1)\n mime                   0.12    2021-09-28 [1] CRAN (R 4.4.0)\n miniUI                 0.1.1.1 2018-05-18 [1] CRAN (R 4.4.0)\n munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.0)\n nlme                   3.1-164 2023-11-27 [1] CRAN (R 4.4.1)\n pillar                 1.9.0   2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild               1.4.5   2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig              2.0.3   2019-09-22 [1] CRAN (R 4.4.0)\n pkgload                1.4.0   2024-06-28 [1] CRAN (R 4.4.0)\n princurve              2.1.6   2021-01-18 [1] CRAN (R 4.4.0)\n profvis                0.4.0   2024-09-20 [1] CRAN (R 4.4.1)\n promises               1.3.0   2024-04-05 [1] CRAN (R 4.4.0)\n purrr                * 1.0.2   2023-08-10 [1] CRAN (R 4.4.0)\n R6                     2.5.1   2021-08-19 [1] CRAN (R 4.4.0)\n Rcpp                   1.0.13  2024-07-17 [1] CRAN (R 4.4.0)\n readr                * 2.1.5   2024-01-10 [1] CRAN (R 4.4.0)\n remotes                2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang                  1.1.4   2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown              2.28    2024-08-17 [1] CRAN (R 4.4.0)\n rsvd                   1.0.5   2021-04-16 [1] CRAN (R 4.4.0)\n S4Arrays               1.4.1   2024-05-30 [1] Bioconduc~\n S4Vectors            * 0.42.1  2024-07-03 [1] Bioconduc~\n ScaledMatrix           1.12.0  2024-04-30 [1] Bioconduc~\n scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.0)\n scater                 1.32.1  2024-07-21 [1] Bioconduc~\n scuttle                1.14.0  2024-04-30 [1] Bioconduc~\n sessioninfo            1.2.2   2021-12-06 [1] CRAN (R 4.4.0)\n shiny                  1.9.1   2024-08-01 [1] CRAN (R 4.4.0)\n SingleCellExperiment * 1.26.0  2024-04-30 [1] Bioconduc~\n SingleR                2.6.0   2024-04-30 [1] Bioconduc~\n slingshot              2.12.0  2024-04-30 [1] Bioconduc~\n SparseArray            1.4.8   2024-05-30 [1] Bioconduc~\n sparseMatrixStats      1.16.0  2024-04-30 [1] Bioconduc~\n stringi                1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n stringr              * 1.5.1   2023-11-14 [1] CRAN (R 4.4.0)\n SummarizedExperiment * 1.34.0  2024-04-30 [1] Bioconduc~\n tibble               * 3.2.1   2023-03-20 [1] CRAN (R 4.4.0)\n tidyr                * 1.3.1   2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.0)\n tidyverse            * 2.0.0   2023-02-22 [1] CRAN (R 4.4.0)\n timechange             0.3.0   2024-01-18 [1] CRAN (R 4.4.0)\n TrajectoryUtils        1.12.0  2024-04-30 [1] Bioconduc~\n tzdb                   0.4.0   2023-05-12 [1] CRAN (R 4.4.0)\n UCSC.utils             1.0.0   2024-05-06 [1] Bioconduc~\n urlchecker             1.0.1   2021-11-30 [1] CRAN (R 4.4.0)\n usethis                3.0.0   2024-07-29 [1] CRAN (R 4.4.0)\n utf8                   1.2.4   2023-10-22 [1] CRAN (R 4.4.0)\n vctrs                  0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n vipor                  0.4.7   2023-12-18 [1] CRAN (R 4.4.0)\n viridis                0.6.5   2024-01-29 [1] CRAN (R 4.4.0)\n viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.0)\n vroom                  1.6.5   2023-12-05 [1] CRAN (R 4.4.0)\n withr                  3.0.2   2024-10-28 [1] CRAN (R 4.4.1)\n xfun                   0.48    2024-10-03 [1] CRAN (R 4.4.1)\n xtable                 1.8-4   2019-04-21 [1] CRAN (R 4.4.0)\n XVector                0.44.0  2024-04-30 [1] Bioconduc~\n zlibbioc               1.50.0  2024-04-30 [1] Bioconduc~\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day5/Lecture8_spatial-transcriptomics.html",
    "href": "content/day5/Lecture8_spatial-transcriptomics.html",
    "title": "16  Lecture 8 - Advances in single-cell genomics: spatial transcriptomics",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-b37043dfa5cf1c205558e40d1a3efbd7\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-8d1d7ab1e670422723c249eba20a79b7\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lab8_pseudotime.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;15&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/extra.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Extra resources&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/extra.html#general-bioinformatics",
    "href": "content/extra.html#general-bioinformatics",
    "title": "Extra resources",
    "section": "General bioinformatics",
    "text": "General bioinformatics\n\nA comprehensive overview of the different types of bioinformatic analyses, divided in 4 fundamental modules: LINK"
  },
  {
    "objectID": "content/extra.html#rbioconductor",
    "href": "content/extra.html#rbioconductor",
    "title": "Extra resources",
    "section": "R/Bioconductor",
    "text": "R/Bioconductor\n\nThe excellent R guide for beginners, by Emmanuel Paradis: PDF\nThe 150+ pages comprehensive book to learn everything about Bioconductor. This ebook has been published by Kasper D. Hansen and is freely available under the CC BY-NC-SA 4.0 license: Link to EPUB"
  },
  {
    "objectID": "content/extra.html#scientific-readings",
    "href": "content/extra.html#scientific-readings",
    "title": "Extra resources",
    "section": "Scientific readings",
    "text": "Scientific readings\n\n2014 Nat. Methods paper from Bioconductor core team describing important object classes\nTo see from how far Bioc comes from..."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "",
    "text": "Welcome\nThis is the landing page for the “Single-cell RNA-seq analysis with R/Bioconductor” workshop, ed. 2024.\nAuthors: Jacques Serizay [aut, cre], Orr Ashenberg [aut, cre], Fabricio Almeida-Silva [aut, cre]Version: 1.0.0Modified: 2024-10-29Compiled: 2024-11-03Environment: R version 4.4.1 (2024-06-14), Bioconductor 3.19License: MIT + file LICENSECopyright: J. Serizay, O. Ashenberg & F. Almeida-Silva"
  },
  {
    "objectID": "index.html#program",
    "href": "index.html#program",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Program",
    "text": "Program\n\n\nDay\nTime\nSession\nInstructor\n\n\n\nDay 1\n14:00 - 15:00\nLecture 1: Introduction to scRNAseq analysis\nJacques\n\n\n\n15:10 - 16:10\nLecture 2: From sequencing reads to expression matrices\nJacques\n\n\n\n16:10 - 17:10\nBreak\n\n\n\n\n17:10 - 18:30\nLab 1: Familiarizing with AWS instance\nJacques\n\n\n\n18:40 - 20:00\nLab 2: From .bcl to count matrix\nFabricio\n\n\nDay 2\n14:00 - 14:50\nFlash talks\n\n\n\n\n15:00 - 16:00\nLecture 3: Quality control for scRNAseq data\nJacques\n\n\n\n16:00 - 17:00\nBreak\n\n\n\n\n17:00 - 18:25\nLab 3: Introduction to R/Bioconductor\nFabricio\n\n\n\n18:35 - 20:00\nLab 4: scRNAseq data wrangling\nFabricio\n\n\nDay 3\n14:00 - 15:30\nLecture 4: Identifying cell populations\nJacques\n\n\n\n15:40 - 17:00\nLab 5: Dimension reduction, clustering, and annotations\nJacques\n\n\n\n17:00 - 18:00\nBreak\n\n\n\n\n18:00 - 19:00\nLecture 5: Data integration and batch effect correction\nOrr or Jacques\n\n\n\n19:10 - 20:00\nLab 6: Batch correction\nOrr\n\n\nDay 4\n14:00 - 15:00\nLecture 6: Advances in single-cell genomics - The epigenome\nOrr\n\n\n\n15:10 - 16:20\nLab 7: scATACseq analysis workflow\nOrr\n\n\n\n16:20 - 17:20\nBreak\n\n\n\n\n17:20 - 18:20\nLecture 7: Trajectories and pseudotimes\nOrr\n\n\n\n18:30 - 20:00\nLab 8: Pseudotime analyses\nFabricio\n\n\nDay 5\n14:00 - 15:00\nLecture 8: Advances in single-cell genomics - Spatial transcriptomics\nOrr\n\n\n\n15:10 - 16:20\nGroup Project: Project work\nJacques\n\n\n\n17:20 - 19:00\nGroup Project: Project work\nJacques\n\n\n\n19:00 - 20:00\nWrap-Up: Finalize Projects and Discussion\n\n\n\n\nMore details about the program can be found here. All the times are in Berlin time (CET)."
  },
  {
    "objectID": "index.html#what",
    "href": "index.html#what",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "What",
    "text": "What\nThis course will introduce biologists and bioinformaticians to the field of single-cell RNA sequencing. We will cover a range of software and analysis workflows that extend over the spectrum from the best practices in the filtering scRNA-seq data\nto the downstream analysis of cell clusters and temporal ordering. This course will help the attendees gain accurate insights in pre-processing, analysis and interpretation of scRNA-seq data.\nWe will start by introducing general concepts about single-cell RNA-sequencing. From there, we will then continue to describe the main analysis steps to go from raw sequencing data to processed and usable data. We will present classical analysis workflows, their output and the possible paths to investigate downstream of this.\nThroughout the workshop, bash tools and R/Bioconductor packages will be used to analyse datasets and learn new approaches."
  },
  {
    "objectID": "index.html#when",
    "href": "index.html#when",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "When",
    "text": "When\nFrom November 4 to November 8, 2025."
  },
  {
    "objectID": "index.html#where",
    "href": "index.html#where",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Where",
    "text": "Where\nThis course will be held online."
  },
  {
    "objectID": "index.html#how",
    "href": "index.html#how",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "How",
    "text": "How\nThe course is structured in modules over five days. Each day will include formal lectures covering the key concepts required to understand scRNA-seq analysis. The remainder of each day will consist in practical hands-on sessions focusing on analysis of scRNA-seq data. These sessions will involve a combination of both mirroring exercises with the instructor to demonstrate a skill, as well as applying these skills on your own to complete individual exercises.\nDuring and after each exercise, interpretation of results will be discussed as a group."
  },
  {
    "objectID": "index.html#who",
    "href": "index.html#who",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Who",
    "text": "Who\nThe course will be mostly beneficial to those who have, or will shortly have, scRNA-seq data ready to analyse.\nThe material is suitable both for experimentalists who want to learn more about data-analysis as well as computational biologists who want to learn about scRNA-seq methods.\nExamples demonstrated in this course can be applied to any experimental protocol or biological system.\nThe requirements for this course are:\n\nWorking knowledge of Unix / command line interface (managing files, running programs, reading manuals!). Basic bash commands (cd, ls, ...) and CLI usage will not be covered in this course. We advice attendees to not register if they lack fundamental experience in CLI.\nProgramming experience in R (writing a function, basic I/O operations, variable types, using packages). Bioconductor experience is a plus.\nFamiliarity with next-generation sequencing data and its analyses (using alignment and quantification tools for bulk sequencing data)"
  },
  {
    "objectID": "index.html#why",
    "href": "index.html#why",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Why",
    "text": "Why\nAt the end of this course, you should be able to:\n\nUnderstand the pros/cons of different single-cell RNA-seq methods\nProcess and QC of scRNA-seq data\nNormalize scRNA-seq data\nCorrect for batch effects\nVisualise the data and applying dimensionality reduction\nPerform cell clustering and annotation\nPerform differential gene expression analysis\nInfer cell trajectory and pseudotime, and perform temporal differential expression\n\nThroughout the course, we will also have a focus on reproducible research, documented content and interactive reports."
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Instructors",
    "text": "Instructors\nJacques Serizay\nOrr Ashenberg\nFabrício Almeida-Silva"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "href": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.1 Read in pancreas expression matrices",
    "text": "11.1 Read in pancreas expression matrices\nFour different datasets are provided in the ~/Share/batch_correction/ directory. These datasets were collected using different single cell RNA-seq technologies.\n\n\n\n\n\n\nQuestion\n\n\n\nImport the four datasets into R. What is the size and sparsity of each dataset?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_celseq_expression_matrix.txt.gz\")\ncelseq2.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_celseq2_expression_matrix.txt.gz\")\nfluidigmc1.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_fluidigmc1_expression_matrix.txt.gz\")\nsmartseq2.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_smartseq2_expression_matrix.txt.gz\")\n\n\nCoerce each dataset to a sparse matrix for efficiency.\n\n\n\nR\n\n# Convert to sparse matrices for efficiency\nlibrary(Matrix)\ncelseq.data &lt;- as(as.matrix(celseq.data), \"dgCMatrix\")\ncelseq2.data &lt;- as(as.matrix(celseq2.data), \"dgCMatrix\")\nfluidigmc1.data &lt;- as(as.matrix(fluidigmc1.data), \"dgCMatrix\")\nsmartseq2.data &lt;- as(as.matrix(smartseq2.data), \"dgCMatrix\")"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#analyze-each-pancreas-dataset-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#analyze-each-pancreas-dataset-without-batch-correction",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.2 Analyze each pancreas dataset without batch correction",
    "text": "11.2 Analyze each pancreas dataset without batch correction\nWe will first analyze each dataset separately to see if there are any differences between the datasets.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the size of each single cell RNA-seq dataset?\nBriefly describe the technology used to collect each dataset.\nWhich datasets do you expect to be different and which do you expect to be similar?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(celseq.data)\n\n\n[1] 20148  1728\n\ndim(celseq2.data)\n\n[1] 19140  3072\n\ndim(fluidigmc1.data)\n\n[1] 25463   638\n\ndim(smartseq2.data)\n\n[1] 26179  3514\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a Seurat object for each dataset, and look at the distributions of number of genes per cell.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(Seurat)\n\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built under R 4.4.0 but the current version is 4.4.1; it is recomended that you reinstall 'SeuratObject' as the ABI for R may have changed\n\n\n'SeuratObject' was built with package 'Matrix' 1.7.0 but the current version is 1.7.1; it is recomended that you reinstall 'SeuratObject' as the ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\n# CEL-Seq (https://www.cell.com/cell-reports/fulltext/S2211-1247(12)00228-8)\ncelseq &lt;- CreateSeuratObject(counts = celseq.data)\nVlnPlot(celseq, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# CEL-Seq2 https://www.cell.com/molecular-cell/fulltext/S1097-2765(09)00641-8\ncelseq2 &lt;- CreateSeuratObject(counts = celseq2.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(celseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# Fluidigm C1\nfluidigmc1 &lt;- CreateSeuratObject(counts = fluidigmc1.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(fluidigmc1, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# SMART-Seq2\nsmartseq2 &lt;- CreateSeuratObject(counts = smartseq2.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(smartseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nNow we will subset the data to remove cells with low gene counts and normalize the data.\n\n\n\n\n\n\nQuestion\n\n\n\nSubset the data to remove cells with:\n\nfewer than 1750 genes for CEL-Seq;\nfewer than 2500 genes for CEL-Seq2;\nfewer than 2500 genes for SMART-Seq2.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq &lt;- subset(celseq, subset = nFeature_RNA &gt; 1750)\nVlnPlot(celseq, \"nFeature_RNA\")\n\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\ncelseq2 &lt;- subset(celseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(celseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\nsmartseq2 &lt;- subset(smartseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(smartseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nNow we will normalize the data and identify variable genes. The procedure is the same for all datasets.\n\n\n\n\n\n\nQuestion\n\n\n\nNormalize the data with LogNormalize method, and identify the 2000 most variable genes for each dataset, using the vst approach.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq &lt;- NormalizeData(celseq, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\n\nNormalizing layer: counts\n\ncelseq &lt;- FindVariableFeatures(celseq, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\ncelseq &lt;- ScaleData(celseq)\n\nCentering and scaling data matrix\n\ncelseq[[\"tech\"]] &lt;- \"celseq\"\ncelseq\n\nAn object of class Seurat \n20148 features across 1004 samples within 1 assay \nActive assay: RNA (20148 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\ncelseq2 &lt;- NormalizeData(celseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\ncelseq2 &lt;- FindVariableFeatures(celseq2, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\ncelseq2 &lt;- ScaleData(celseq2)\n\nCentering and scaling data matrix\n\ncelseq2[[\"tech\"]] &lt;- \"celseq2\"\ncelseq2\n\nAn object of class Seurat \n19140 features across 2285 samples within 1 assay \nActive assay: RNA (19140 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\nfluidigmc1 &lt;- NormalizeData(fluidigmc1, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\nfluidigmc1 &lt;- FindVariableFeatures(fluidigmc1, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\nfluidigmc1 &lt;- ScaleData(fluidigmc1)\n\nCentering and scaling data matrix\n\nfluidigmc1[[\"tech\"]] &lt;- \"fluidigmc1\"\nfluidigmc1\n\nAn object of class Seurat \n25463 features across 638 samples within 1 assay \nActive assay: RNA (25463 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\nsmartseq2 &lt;- NormalizeData(smartseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\nsmartseq2 &lt;- FindVariableFeatures(smartseq2, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\nsmartseq2 &lt;- ScaleData(smartseq2)\n\nCentering and scaling data matrix\n\nsmartseq2[[\"tech\"]] &lt;- \"smartseq2\"\nsmartseq2\n\nAn object of class Seurat \n26179 features across 2394 samples within 1 assay \nActive assay: RNA (26179 features, 2000 variable features)\n 3 layers present: counts, data, scale.data"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.3 Cluster pancreatic datasets without batch correction",
    "text": "11.3 Cluster pancreatic datasets without batch correction\nWe will first merge all the cells from the four different experiments together, and cluster all the pancreatic islet datasets to see whether there is a batch effect.\n\n\n\n\n\n\nQuestion\n\n\n\nMerge the datasets into a single Seurat object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Merge Seurat objects. Original sample identities are stored in gcdata[[\"tech\"]].\n# Cell names will now have the format tech_cellID (smartseq2_cell1...)\nadd.cell.ids &lt;- c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\")\ngcdata &lt;- merge(x = celseq, y = list(celseq2, fluidigmc1, smartseq2), add.cell.ids = add.cell.ids, merge.data = FALSE)\nIdents(gcdata) &lt;- \"tech\"  # use identity based on sample identity\ngcdata\n\n\nAn object of class Seurat \n33633 features across 6321 samples within 1 assay \nActive assay: RNA (33633 features, 2000 variable features)\n 12 layers present: counts.1, counts.2, counts.3, counts.4, data.1, scale.data.1, data.2, scale.data.2, data.3, scale.data.3, data.4, scale.data.4\n\nVlnPlot(gcdata, \"nFeature_RNA\", group.by = \"tech\")\n\n\n\n\n\n\n\n\n\nAfter merging, we will perform again the normalization, variable gene selection, and scaling.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the difference between SelectIntegrationFeatures and FindVariableFeatures in Seurat?\nRun NormalizeData, SelectIntegrationFeatures, and ScaleData on the merged dataset.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- NormalizeData(gcdata, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\n\nNormalizing layer: counts.1\n\n\nNormalizing layer: counts.2\n\n\nNormalizing layer: counts.3\n\n\nNormalizing layer: counts.4\n\nvar.genes &lt;- SelectIntegrationFeatures(\n  list(celseq, celseq2, fluidigmc1, smartseq2), \n  nfeatures = 2000, \n  verbose = TRUE, \n  fvf.nfeatures = 2000, \n  selection.method = \"vst\"\n)\nVariableFeatures(gcdata) &lt;- var.genes\ngcdata &lt;- ScaleData(gcdata, features = VariableFeatures(gcdata))\n\nCentering and scaling data matrix\n\n\n\n\n\n\n\nNow that data is merged, normalized, and scaled, we will perform principal component analysis (PCA) and visualize the data.\n\n\n\n\n\n\nQuestion\n\n\n\nDo PCA on data including only the variable genes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- RunPCA(gcdata, features = VariableFeatures(gcdata), npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\n\n\nPC_ 1 \nPositive:  IFITM3, ZFP36L1, LGALS3, S100A11, TACSTD2 \nNegative:  CHGB, CHGA, PAM, ABCC8, MIR7-3HG \nPC_ 2 \nPositive:  KRT8, ELF3, KRT18, CLDN4, TACSTD2 \nNegative:  SPARC, COL1A2, PDGFRB, COL3A1, COL15A1 \nPC_ 3 \nPositive:  TMEM212, MAB21L3, CCDC142, NLRP12, TLCD2 \nNegative:  CTSD, TIMP1, PEMT, HIF1A, GSTP1 \nPC_ 4 \nPositive:  CPA2, CTRC, PNLIP, CTRB2, CTRB1 \nNegative:  CFTR, IGFBP7, AQP1, VTCN1, TINAGL1 \nPC_ 5 \nPositive:  FLT1, KDR, ESAM, PODXL, CD93 \nNegative:  COL5A1, COL3A1, COL1A1, SFRP2, COL1A2 \n\n\n\n\n\nColor the PCA biplot by the scRNA-seq technology.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nDimPlot(gcdata, reduction = \"pca\", dims = c(1, 2), group.by = \"tech\")\n\n\n\n\n\n\n\n\n\n\nNow we will cluster the cells and visualize the clusters in reduced dimensional space.\n\n\n\n\n\n\nQuestion\n\n\n\n\nFind the k=20 nearest neighbors for each cell in the PCA space, using the first 20 principal components.\nCluster the cells.\nPerform UMAP embedding and visualize clustering results in 2D.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Cluster the cells using the first twenty principal components.\ngcdata &lt;- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\n\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\ngcdata &lt;- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 6321\nNumber of edges: 220127\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9323\nNumber of communities: 23\nElapsed time: 0 seconds\n\n# Create a UMAP visualization. \ngcdata &lt;- RunUMAP(gcdata, dims = 1:20, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n15:51:39 UMAP embedding parameters a = 0.583 b = 1.334\n\n\n15:51:39 Read 6321 rows and found 20 numeric columns\n\n\n15:51:39 Using Annoy for neighbor search, n_neighbors = 15\n\n\n15:51:39 Building Annoy index with metric = euclidean, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n15:51:39 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//RtmpmeI3uf/filec4c630907302\n15:51:39 Searching Annoy index using 1 thread, search_k = 1500\n15:51:40 Annoy recall = 100%\n15:51:40 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 15\n15:51:41 Initializing from normalized Laplacian + noise (using RSpectra)\n15:51:41 Commencing optimization for 500 epochs, with 127374 positive edges\n15:51:45 Optimization finished\n\n# Visualize the Leiden clustering and the batches on the UMAP. \n# Remember, the clustering is stored in @meta.data in column seurat_clusters and the technology is\n# stored in the column tech. Remember you can also use DimPlot\nDimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\n\n\n\nDimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\n\n\n\n\n\n\n\nAre you surprised by the results? Compare to your expectations from the PC biplot of PC1 vs PC2.\nWhat explains these results?\n\n\nWe can assess the quality of the clustering by calculating the adjusted rand index (ARI) between the technology and the cluster labels. This goes between 0 (completely dissimilar clustering) to 1 (identical clustering). The adjustment corrects for chance grouping between cluster elements.\n\n\n\nR\n\nlibrary(fossil)\n\n\nLoading required package: maps\n\n\nLoading required package: shapefiles\n\n\nLoading required package: foreign\n\n\n\nAttaching package: 'shapefiles'\n\n\nThe following objects are masked from 'package:foreign':\n\n    read.dbf, write.dbf\n\nari &lt;- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n[1] 0.67147"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#batch-correction-canonical-correlation-analysis-cca-mutual-nearest-neighbors-mnn",
    "href": "content/day3/Lab6_batch_correction.html#batch-correction-canonical-correlation-analysis-cca-mutual-nearest-neighbors-mnn",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.4 Batch correction: canonical correlation analysis (CCA)+ mutual nearest neighbors (MNN)",
    "text": "11.4 Batch correction: canonical correlation analysis (CCA)+ mutual nearest neighbors (MNN)\nWe will now use Seurat to see to what extent it can remove potential batch effects.\nThe first piece of code will identify variable genes that are highly variable in at least 2/4 datasets. We will use these variable genes in our batch correction.\nWhy would we implement such a requirement?\n\n\n\n\n\n\nQuestion\n\n\n\nThe integration workflow in Seurat requires the identification of variable genes that are variable across most samples. Use the FindIntegrationAnchors function to identify anchors on the 4 pancreatic islet datasets, commonly shared variable genes across samples, and integrate samples.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nob.list &lt;- list(celseq, celseq2, fluidigmc1, smartseq2)\ngcdata.anchors &lt;- FindIntegrationAnchors(object.list = ob.list, anchor.features = 2000, dims = 1:30)\n\n\nComputing 2000 integration features\n\n\nScaling features for provided objects\n\n\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\n\n\nFinding all pairwise anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 3525 anchors\n\n\nFiltering anchors\n\n\n    Retained 2761 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2182 anchors\n\n\nFiltering anchors\n\n\n    Retained 1806 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2801 anchors\n\n\nFiltering anchors\n\n\n    Retained 2472 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 3558 anchors\n\n\nFiltering anchors\n\n\n    Retained 2723 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 6214 anchors\n\n\nFiltering anchors\n\n\n    Retained 4693 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2713 anchors\n\n\nFiltering anchors\n\n\n    Retained 1724 anchors\n\ngcdata &lt;- IntegrateData(anchorset = gcdata.anchors, dims = 1:30)\n\nMerging dataset 3 into 2\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\n\nMerging dataset 1 into 2 3\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nWarning: Different cells in new layer data than already exists for scale.data\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\n\nMerging dataset 4 into 2 3 1\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nWarning: Different cells in new layer data than already exists for scale.data\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\nDefaultAssay(gcdata) &lt;- \"integrated\"\n\n\n\n\n\n\nNow that the integration anchors have been used to integrate multiple datasets, we will perform the same analysis as before.\n\n\n\n\n\n\nQuestion\n\n\n\n\nNormalize the integrated data with LogNormalize method.\nIdentify the 2000 most variable genes for the integrated dataset, using the vst approach.\nScale the data.\nPerform PCA on data including only the variable genes.\nCluster the cells.\nPerform UMAP embedding and visualize clustering results in 2D.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Run the standard workflow for visualization and clustering.\ngcdata &lt;- ScaleData(gcdata, do.center = TRUE, do.scale = FALSE)\n\n\nCentering data matrix\n\ngcdata &lt;- FindVariableFeatures(gcdata)\n\nWarning in FindVariableFeatures.Assay(object = object[[assay]], selection.method = selection.method, : selection.method set to 'vst' but count slot is empty; will use data slot instead\n\n\nWarning in eval(predvars, data, env): NaNs produced\n\n\nWarning in hvf.info$variance.expected[not.const] &lt;- 10^fit$fitted: number of items to replace is not a multiple of replacement length\n\ngcdata &lt;- RunPCA(gcdata, npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\n\nPC_ 1 \nPositive:  CHGB, CHGA, VGF, ABCC8, TM4SF4 \nNegative:  SERPINA3, REG1A, TACSTD2, ANXA4, CD44 \nPC_ 2 \nPositive:  REG1B, REG1A, CTRB2, SPINK1, PRSS1 \nNegative:  IGFBP7, SPP1, CFTR, PMEPA1, ANXA2 \nPC_ 3 \nPositive:  INS, IAPP, RBP4, PCSK1, HADH \nNegative:  TM4SF4, GC, CHGB, LOXL4, MUC13 \nPC_ 4 \nPositive:  SPARC, COL1A1, FAP, VIM, COL1A2 \nNegative:  INS, IAPP, RBP4, HADH, PCSK1 \nPC_ 5 \nPositive:  PPY, SST, AQP3, ID2, PRG4 \nNegative:  INS, G6PC2, IAPP, FAP, LOXL4 \n\nDimPlot(gcdata, dims = c(1, 2), reduction = \"pca\", split.by = \"tech\")\n\n\n\n# Clustering\ngcdata &lt;- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\ngcdata &lt;- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 6321\nNumber of edges: 251064\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8658\nNumber of communities: 16\nElapsed time: 0 seconds\n\n# UMAP\ngcdata &lt;- RunUMAP(gcdata, dims = 1:30, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\n15:53:26 UMAP embedding parameters a = 0.583 b = 1.334\n\n\n15:53:26 Read 6321 rows and found 30 numeric columns\n\n\n15:53:26 Using Annoy for neighbor search, n_neighbors = 15\n\n\n15:53:26 Building Annoy index with metric = euclidean, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n15:53:27 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//RtmpmeI3uf/filec4c666ff06ea\n15:53:27 Searching Annoy index using 1 thread, search_k = 1500\n15:53:27 Annoy recall = 100%\n15:53:28 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 15\n15:53:28 Found 2 connected components, falling back to 'spca' initialization with init_sdev = 1\n15:53:28 Using 'irlba' for PCA\n15:53:28 PCA: 2 components explained 55.6% variance\n15:53:28 Scaling init to sdev = 1\n15:53:28 Commencing optimization for 500 epochs, with 139426 positive edges\n15:53:33 Optimization finished\n\n# After data integration, use the original expression data in all visualization and DE tests.\n# The integrated data must not be used in DE tests as it violates assumptions of independence in DE tests!\nDefaultAssay(gcdata) &lt;- \"RNA\"  \n\n# Visualize the Louvain clustering and the batches on the UMAP. \np1 &lt;- DimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\np2 &lt;- DimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\np1 + p2\n\n\n\n\n\n\n\n\n\nLet’s look again to see how the adjusted rand index changed compared to using no batch correction.\n\n\n\nR\n\nari &lt;- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n\n[1] 0.2728\n\n\n\n11.4.1 Differential gene expression and visualization\nWe can also identify conserved marker genes across the batches. Differential gene expression is done across each batch, and the p-values are combined. (requires metap package installation).\n\n\n\nR\n\ngcdata &lt;- JoinLayers(gcdata)\nmarkers &lt;- FindConservedMarkers(gcdata, ident.1 = 0, grouping.var = \"tech\", assay = \"RNA\", print.bar = TRUE)\n\n\nTesting group fluidigmc1: (0) vs (1, 9, 8, 5, 3, 11, 4, 2, 14, 7, 6, 13, 10, 15, 12)\n\n\nFor a (much!) faster implementation of the Wilcoxon Rank Sum Test,\n(default method for FindMarkers) please install the presto package\n--------------------------------------------\ninstall.packages('devtools')\ndevtools::install_github('immunogenomics/presto')\n--------------------------------------------\nAfter installation of presto, Seurat will automatically use the more \nefficient implementation (no further action necessary).\nThis message will be shown once per session\n\n\nTesting group celseq: (0) vs (4, 1, 10, 12, 11, 3, 6, 2, 8, 5, 13, 9, 7, 14)\n\n\nTesting group celseq2: (0) vs (3, 14, 6, 10, 1, 4, 11, 5, 2, 15, 7, 12, 8, 9, 13)\n\n\nTesting group smartseq2: (0) vs (7, 2, 4, 5, 3, 8, 1, 6, 11, 13, 9, 14, 15, 12, 10)\n\nhead(markers)\n\n        fluidigmc1_p_val fluidigmc1_avg_log2FC fluidigmc1_pct.1 fluidigmc1_pct.2 fluidigmc1_p_val_adj celseq_p_val celseq_avg_log2FC celseq_pct.1 celseq_pct.2 celseq_p_val_adj celseq2_p_val\nADCYAP1       1.8084e-82                2.5378            0.957            0.210           6.0822e-78  1.2992e-100            4.5213        0.776        0.060       4.3697e-96   1.9710e-177\nMAFA          9.7556e-71                3.3517            0.760            0.072           3.2811e-66  3.0290e-119            5.2347        0.966        0.108      1.0188e-114   4.9483e-207\nWSCD2         3.8400e-50                2.9897            0.597            0.067           1.2915e-45   8.4615e-75            6.3746        0.414        0.007       2.8458e-70   4.7006e-171\nCYYR1         3.7322e-52                3.5740            0.635            0.072           1.2552e-47   4.0528e-44            4.1326        0.379        0.030       1.3631e-39   2.1459e-125\nSAMD11        3.0785e-71                3.6260            0.893            0.215           1.0354e-66   6.4422e-66            4.3544        0.526        0.038       2.1667e-61    1.9511e-33\nLRRTM3        5.8711e-47                4.6925            0.545            0.049           1.9746e-42   1.2573e-07            2.9436        0.103        0.018       4.2287e-03   9.8492e-118\n        celseq2_avg_log2FC celseq2_pct.1 celseq2_pct.2 celseq2_p_val_adj smartseq2_p_val smartseq2_avg_log2FC smartseq2_pct.1 smartseq2_pct.2 smartseq2_p_val_adj   max_pval minimump_p_val\nADCYAP1             3.0496         0.904         0.155       6.6289e-173      0.0000e+00               4.8627           0.951           0.076          0.0000e+00 1.8084e-82     0.0000e+00\nMAFA                3.4302         0.985         0.174       1.6643e-202      0.0000e+00               6.3772           0.892           0.033          0.0000e+00 9.7556e-71     0.0000e+00\nWSCD2               3.6747         0.661         0.057       1.5810e-166     4.2769e-290               6.7790           0.760           0.033         1.4385e-285 3.8400e-50    1.7108e-289\nCYYR1               2.4830         0.646         0.085       7.2174e-121     3.6204e-254               4.6442           0.801           0.059         1.2176e-249 4.0528e-44    1.4481e-253\nSAMD11              2.1395         0.210         0.032        6.5622e-29     1.2463e-223               4.5995           0.843           0.098         4.1916e-219 1.9511e-33    4.9851e-223\nLRRTM3              3.8726         0.472         0.042       3.3126e-113     2.0788e-209               7.0461           0.502           0.010         6.9917e-205 1.2573e-07    8.3153e-209\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nVisualize the expression of the first 5 marker genes on UMAP across the different batches using DoHeatmap.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- ScaleData(gcdata, features = rownames(gcdata), do.center = T, do.scale = F)\n\n\nCentering data matrix\n\n\nWarning: Different features in new layer data than already exists for scale.data\n\nDoHeatmap(gcdata, features = rownames(markers)[1:5], group.by = \"tech\", disp.max = 3)\n\n\n\n\n\n\n\nCheck the expression of some known marker genes for pancreatic cells (see the Human pancreas cell atlas).\n\n\n\nR\n\ngenes &lt;- c(\"GCG\", \"INS\", \"SST\", \"PPY\", \"PRSS1\", \"KRT19\", \"PECAM1\", \"COL1A1\")\nFeaturePlot(gcdata, genes, ncol = 4)"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#batch-correction-integrative-non-negative-matrix-factorization-nmf",
    "href": "content/day3/Lab6_batch_correction.html#batch-correction-integrative-non-negative-matrix-factorization-nmf",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.5 Batch correction: integrative non-negative matrix factorization (NMF)",
    "text": "11.5 Batch correction: integrative non-negative matrix factorization (NMF)\nHere we use integrative non-negative matrix factorization to see to what extent it can remove potential batch effects.\nThe important parameters in the batch correction are the number of factors (k), the penalty parameter (lambda), and the clustering resolution. The number of factors sets the number of factors (consisting of shared and dataset-specific factors) used in factorizing the matrix. The penalty parameter sets the balance between factors shared across the batches and factors specific to the individual batches. The default setting of lambda=5.0 is usually used by the Macosko lab. Resolution=1.0 is used in the Louvain clustering of the shared neighbor factors that have been quantile normalized.\n\n\n\nR\n\nob.list &lt;- list(\"celseq\" = celseq, \"celseq2\" = celseq2, \"fluidigmc1\" = fluidigmc1, \"smartseq2\" = smartseq2)\n\n# Create a LIGER object with raw counts data from each batch.\nlibrary(rliger)\n\n\nPackage `rliger` has been updated massively since version 1.99.0, including the object structure which is not compatible with old versions.\n\nWe recommand you backup your old analysis before overwriting any existing result.\n\n`readLiger()` is provided for reading an RDS file storing an old object and it converts the object to the up-to-date structure.\n\ndata.liger &lt;- createLiger(sapply(ob.list, function(data) LayerData(data[['RNA']], 'counts')[, colnames(data)]))\n\nℹ calculating QC for dataset \"celseq\"\n\n\n✔ calculating QC for dataset \"celseq\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"celseq2\"\n\n\n✔ calculating QC for dataset \"celseq2\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"fluidigmc1\"\n\n\n✔ calculating QC for dataset \"fluidigmc1\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"smartseq2\"\n\n\n✔ calculating QC for dataset \"smartseq2\" ... done\n\n\n\n\n\nℹ Removing missing in dataset: \"celseq\"\n\n\nℹ Removing missing in dataset: \"celseq2\"\n\n\nℹ Removing missing in dataset: \"fluidigmc1\"\n\n\nℹ Removing missing in dataset: \"smartseq2\"\n\n# Normalize gene expression for each batch.\ndata.liger &lt;- rliger::normalize(data.liger)\n\nℹ Normalizing datasets \"celseq\"\n\n\nℹ Normalizing datasets \"celseq2\"\n\n\nℹ Normalizing datasets \"fluidigmc1\"\n\n\nℹ Normalizing datasets \"smartseq2\"\n\n\n✔ Normalizing datasets \"smartseq2\" ... done\n\n\n\n\n\nℹ Normalizing datasets \"fluidigmc1\"\n✔ Normalizing datasets \"fluidigmc1\" ... done\n\nℹ Normalizing datasets \"celseq2\"\n✔ Normalizing datasets \"celseq2\" ... done\n\nℹ Normalizing datasets \"celseq\"\n✔ Normalizing datasets \"celseq\" ... done\n\n# Find variable genes for LIGER analysis.\ndata.liger &lt;- selectGenes(data.liger, var.thresh = 0.1, do.plot = FALSE)\n\nWarning: The `var.thresh` argument of `selectGenes.liger()` is deprecated as of rliger 1.99.0.\nℹ Please use the `thresh` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nWarning: The `do.plot` argument of `selectGenes.liger()` is deprecated as of rliger 1.99.0.\nℹ Ignored.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nℹ Selecting variable features for dataset \"celseq\"\n✔ ... 3885 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"celseq2\"\n✔ ... 6990 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"fluidigmc1\"\n✔ ... 14985 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"smartseq2\"\n✔ ... 14909 features selected out of 15217 shared features.\n✔ Finally 15170 shared variable features are selected.\n\nprint(length(varFeatures(data.liger)))\n\n[1] 15170\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nScale the gene expression across the datasets.\nWhy does LIGER not center the data?\nHint: think about the use of non-negative matrix factorization and the constraints that this imposes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- scaleNotCenter(data.liger)\n\n\nℹ Scaling dataset \"celseq\"\n\n\n✔ Scaling dataset \"celseq\" ... done\n\n\n\n\n\nℹ Scaling dataset \"celseq2\"\n\n\n✔ Scaling dataset \"celseq2\" ... done\n\n\n\n\n\nℹ Scaling dataset \"fluidigmc1\"\n\n\n✔ Scaling dataset \"fluidigmc1\" ... done\n\n\n\n\n\nℹ Scaling dataset \"smartseq2\"\n\n\n✔ Scaling dataset \"smartseq2\" ... done\n\n\n\n\n\n\n\n\n\n\nNext, we will run the integrative non-negative matrix factorization.\n\n\n\n\n\n\nQuestion\n\n\n\nUse the runIntegration function to perform the integrative non-negative matrix factorization.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- runIntegration(data.liger) \n\n\n\n\n\nWhat do matrices H, V, and W represent, and what are their dimensions?\n\n\n\nR\n\ndim(getMatrix(data.liger, \"H\")$celseq)\n\n\n[1]   20 1004\n\ndim(getMatrix(data.liger, \"V\")$celseq)\n\n[1] 15170    20\n\ndim(getMatrix(data.liger, \"W\"))\n\n[1] 15170    20\n\n\n\n\nNext, do clustering of cells in shared nearest factor space.\n\n\n\n\n\n\nQuestion\n\n\n\nDo quantile normalization, cluster quantile normalized data\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- quantileNorm(data.liger, resolution = 1) \n\n\nℹ Using largest dataset of recommended type as reference: \"smartseq2\" with 2394 cells\n\ndata.liger &lt;- runCluster(data.liger)\n\nℹ leiden clustering on quantile normalized cell factor loadings\n\n\n✔ leiden clustering on quantile normalized cell factor loadings ... Found 33 clusters.\n\n\n\n\n\nℹ cellMeta variable \"leiden_cluster\" is now set as default.\n\n\n\n\n\nWhat are the dimensions of H.norm. What does this represent?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(getMatrix(data.liger, \"H.norm\"))\n\n\n[1] 6321   20\n\n\n\n\n\n\n\nLet’s see what the liger data looks like mapped onto a UMAP visualization.\n\n\n\n\n\n\nQuestion\n\n\n\nRun UMAP on the quantile normalized data and visualize the clusters.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- runUMAP(data.liger, n_neighbors = 15, min_dist = 0.5)\n\n\nWarning: The `n_neighbors` argument of `runUMAP()` is deprecated as of rliger 1.99.0.\nℹ Please use the `nNeighbors` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nWarning: The `min_dist` argument of `runUMAP()` is deprecated as of rliger 1.99.0.\nℹ Please use the `minDist` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nℹ Generating UMAP on quantile normalized cell factor loadings\n\n\n✔ Generating UMAP on quantile normalized cell factor loadings ... done\n\n\n\n\n\nℹ DimRed \"UMAP\" is now set as default.\n\np &lt;- plotByDatasetAndCluster(data.liger) \n\nℹ Plotting feature \"dataset\" on 6321 cells\n\n\n✔ Plotting feature \"dataset\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"leiden_cluster\" on 6321 cells\n\n\n✔ Plotting feature \"leiden_cluster\" on 6321 cells ... done\n\n\n\n\np\n\n\n\n\n\n\n\n\n\nHere is the end of the LIGER analysis:\n\n# Let's look to see how the adjusted rand index changed compared to using no batch correction.\ntech &lt;- cellMeta(data.liger)$dataset\nclusters &lt;- cellMeta(data.liger)$leiden_cluster\nari &lt;- data.frame(\"tech\" = tech, \"clusters\" = clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$clusters))\n\n[1] 0.30721\n\n# Look at factor loadings for each cell using plotFactors. \nplotFactorDimRed(data.liger, factors = 1:5)\n\nℹ Plotting feature \"Factor_1\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_1\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_2\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_2\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_3\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_3\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_4\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_4\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_5\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_5\" on 6321 cells ... done\n\n\n\n\n\n$Factor_1\n\n\n\n\n\n\n$Factor_2\n\n\n\n\n\n\n$Factor_3\n\n\n\n\n\n\n$Factor_4\n\n\n\n\n\n\n$Factor_5\n\n\n\n\n# Identify shared and batch-specific marker genes from liger factorization.\n# Use the getFactorMarkers function and choose 2 datasets.\n# Then plot some genes of interest using plotGene.\nmarkers &lt;- getFactorMarkers(data.liger, dataset1 = \"celseq2\", dataset2 = \"smartseq2\", num.genes = 10)\n\nWarning: The `num.genes` argument of `getFactorMarkers()` is deprecated as of rliger 1.99.0.\nℹ Please use the `nGenes` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nTesting between {.val {dataset1}} and {.val {dataset2}} ■■■■■■■■■■■■■■■■■■■■■■■■          78% | ETA:  1s\n\n\nTesting between {.val {dataset1}} and {.val {dataset2}} ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s\n\n\n\n\nplotGeneDimRed(data.liger, features = \"INS\")\n\nℹ Plotting feature \"INS\" on 6321 cells\n\n\n✔ Plotting feature \"INS\" on 6321 cells ... done"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "href": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.6 Additional exploration",
    "text": "11.6 Additional exploration\n\n11.6.1 Regressing out unwanted covariates\nLearn how to regress out different technical covariates (number of UMIs, number of genes, percent mitochondrial reads) by studying Seurat’s PBMC tutorial and the ScaleData() function.\n\n11.6.2 kBET\nWithin your RStudio session, install k-nearest neighbour batch effect test and learn how to use its functionality to quantify batch effects in the pancreatic data."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "href": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.7 Acknowledgements",
    "text": "11.7 Acknowledgements\nThis document builds off a tutorial from the Seurat website and a tutorial from the LIGER website."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#session-info",
    "href": "content/day3/Lab6_batch_correction.html#session-info",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.8 Session info",
    "text": "11.8 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package          * version    date (UTC) lib source\n abind              1.4-8      2024-09-12 [1] CRAN (R 4.4.1)\n beeswarm           0.4.0      2021-06-01 [1] CRAN (R 4.4.0)\n Biobase            2.64.0     2024-04-30 [1] Bioconduc~\n BiocGenerics       0.50.0     2024-04-30 [1] Bioconduc~\n cachem             1.1.0      2024-05-16 [1] CRAN (R 4.4.0)\n cli                3.6.3      2024-06-21 [1] CRAN (R 4.4.0)\n cluster            2.1.6      2023-12-01 [1] CRAN (R 4.4.1)\n codetools          0.2-20     2024-03-31 [1] CRAN (R 4.4.1)\n colorspace         2.1-1      2024-07-26 [1] CRAN (R 4.4.0)\n cowplot            1.1.3      2024-01-22 [1] CRAN (R 4.4.0)\n data.table         1.16.2     2024-10-10 [1] CRAN (R 4.4.1)\n deldir             2.0-4      2024-02-28 [1] CRAN (R 4.4.0)\n devtools           2.4.5      2022-10-11 [1] CRAN (R 4.4.0)\n digest             0.6.37     2024-08-19 [1] CRAN (R 4.4.1)\n dotCall64          1.2        2024-10-04 [1] CRAN (R 4.4.1)\n dplyr              1.1.4      2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis           0.3.2      2021-04-29 [1] CRAN (R 4.4.0)\n evaluate           1.0.1      2024-10-10 [1] CRAN (R 4.4.1)\n fansi              1.0.6      2023-12-08 [1] CRAN (R 4.4.0)\n farver             2.1.2      2024-05-13 [1] CRAN (R 4.4.0)\n fastDummies        1.7.4      2024-08-16 [1] CRAN (R 4.4.0)\n fastmap            1.2.0      2024-05-15 [1] CRAN (R 4.4.0)\n fitdistrplus       1.2-1      2024-07-12 [1] CRAN (R 4.4.0)\n foreign          * 0.8-86     2023-11-28 [1] CRAN (R 4.4.1)\n fossil           * 0.4.0      2020-03-23 [1] CRAN (R 4.4.0)\n fs                 1.6.4      2024-04-25 [1] CRAN (R 4.4.0)\n future             1.34.0     2024-07-29 [1] CRAN (R 4.4.0)\n future.apply       1.11.3     2024-10-27 [1] CRAN (R 4.4.1)\n generics           0.1.3      2022-07-05 [1] CRAN (R 4.4.0)\n ggbeeswarm         0.7.2      2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2            3.5.1      2024-04-23 [1] CRAN (R 4.4.0)\n ggrastr            1.0.2      2023-06-01 [1] CRAN (R 4.4.0)\n ggrepel            0.9.6      2024-09-07 [1] CRAN (R 4.4.1)\n ggridges           0.5.6      2024-01-23 [1] CRAN (R 4.4.0)\n globals            0.16.3     2024-03-08 [1] CRAN (R 4.4.0)\n glue               1.8.0      2024-09-30 [1] CRAN (R 4.4.1)\n goftest            1.2-3      2021-10-07 [1] CRAN (R 4.4.0)\n gridExtra          2.3        2017-09-09 [1] CRAN (R 4.4.0)\n gtable             0.3.6      2024-10-25 [1] CRAN (R 4.4.1)\n htmltools          0.5.8.1    2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets        1.6.4      2023-12-06 [1] CRAN (R 4.4.0)\n httpuv             1.6.15     2024-03-26 [1] CRAN (R 4.4.0)\n httr               1.4.7      2023-08-15 [1] CRAN (R 4.4.0)\n ica                1.0-3      2022-07-08 [1] CRAN (R 4.4.0)\n igraph             2.1.1      2024-10-19 [1] CRAN (R 4.4.1)\n irlba              2.3.5.1    2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite           1.8.9      2024-09-20 [1] CRAN (R 4.4.1)\n KernSmooth         2.23-24    2024-05-17 [1] CRAN (R 4.4.1)\n knitr              1.48       2024-07-07 [1] CRAN (R 4.4.0)\n labeling           0.4.3      2023-08-29 [1] CRAN (R 4.4.0)\n later              1.3.2      2023-12-06 [1] CRAN (R 4.4.0)\n lattice            0.22-6     2024-03-20 [1] CRAN (R 4.4.1)\n lazyeval           0.2.2      2019-03-15 [1] CRAN (R 4.4.0)\n leiden             0.4.3.1    2023-11-17 [1] CRAN (R 4.4.0)\n leidenAlg          1.1.4      2024-10-17 [1] CRAN (R 4.4.1)\n lifecycle          1.0.4      2023-11-07 [1] CRAN (R 4.4.0)\n limma              3.60.6     2024-10-02 [1] Bioconduc~\n listenv            0.9.1      2024-01-29 [1] CRAN (R 4.4.0)\n lmtest             0.9-40     2022-03-21 [1] CRAN (R 4.4.0)\n magrittr           2.0.3      2022-03-30 [1] CRAN (R 4.4.0)\n maps             * 3.4.2      2023-12-15 [1] CRAN (R 4.4.0)\n MASS               7.3-60.2   2024-04-26 [1] CRAN (R 4.4.1)\n mathjaxr           1.6-0      2022-02-28 [1] CRAN (R 4.4.0)\n Matrix           * 1.7-1      2024-10-18 [1] CRAN (R 4.4.1)\n matrixStats        1.4.1      2024-09-08 [1] CRAN (R 4.4.1)\n memoise            2.0.1      2021-11-26 [1] CRAN (R 4.4.0)\n metap              1.11       2024-07-11 [1] CRAN (R 4.4.0)\n mime               0.12       2021-09-28 [1] CRAN (R 4.4.0)\n miniUI             0.1.1.1    2018-05-18 [1] CRAN (R 4.4.0)\n mnormt             2.1.1      2022-09-26 [1] CRAN (R 4.4.0)\n multcomp           1.4-26     2024-07-18 [1] CRAN (R 4.4.0)\n multtest           2.60.0     2024-04-30 [1] Bioconduc~\n munsell            0.5.1      2024-04-01 [1] CRAN (R 4.4.0)\n mutoss             0.1-13     2023-03-14 [1] CRAN (R 4.4.0)\n mvtnorm            1.3-1      2024-09-03 [1] CRAN (R 4.4.1)\n nlme               3.1-164    2023-11-27 [1] CRAN (R 4.4.1)\n numDeriv           2016.8-1.1 2019-06-06 [1] CRAN (R 4.4.0)\n parallelly         1.38.0     2024-07-27 [1] CRAN (R 4.4.0)\n patchwork          1.3.0      2024-09-16 [1] CRAN (R 4.4.1)\n pbapply            1.7-2      2023-06-27 [1] CRAN (R 4.4.0)\n pillar             1.9.0      2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild           1.4.5      2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig          2.0.3      2019-09-22 [1] CRAN (R 4.4.0)\n pkgload            1.4.0      2024-06-28 [1] CRAN (R 4.4.0)\n plotly             4.10.4     2024-01-13 [1] CRAN (R 4.4.0)\n plotrix            3.8-4      2023-11-10 [1] CRAN (R 4.4.0)\n plyr               1.8.9      2023-10-02 [1] CRAN (R 4.4.0)\n png                0.1-8      2022-11-29 [1] CRAN (R 4.4.0)\n polyclip           1.10-7     2024-07-23 [1] CRAN (R 4.4.0)\n profvis            0.4.0      2024-09-20 [1] CRAN (R 4.4.1)\n progressr          0.14.0     2023-08-10 [1] CRAN (R 4.4.0)\n promises           1.3.0      2024-04-05 [1] CRAN (R 4.4.0)\n purrr              1.0.2      2023-08-10 [1] CRAN (R 4.4.0)\n qqconf             1.3.2      2023-04-14 [1] CRAN (R 4.4.0)\n R6                 2.5.1      2021-08-19 [1] CRAN (R 4.4.0)\n RANN               2.6.2      2024-08-25 [1] CRAN (R 4.4.1)\n rbibutils          2.3        2024-10-04 [1] CRAN (R 4.4.1)\n RColorBrewer       1.1-3      2022-04-03 [1] CRAN (R 4.4.0)\n Rcpp               1.0.13     2024-07-17 [1] CRAN (R 4.4.0)\n RcppAnnoy          0.0.22     2024-01-23 [1] CRAN (R 4.4.0)\n RcppHNSW           0.6.0      2024-02-04 [1] CRAN (R 4.4.0)\n RcppPlanc          1.0.0      2024-10-29 [1] https://welch-lab.r-universe.dev (R 4.4.1)\n Rdpack             2.6.1      2024-08-06 [1] CRAN (R 4.4.0)\n remotes            2.5.0      2024-03-17 [1] CRAN (R 4.4.0)\n reshape2           1.4.4      2020-04-09 [1] CRAN (R 4.4.0)\n reticulate         1.39.0     2024-09-05 [1] CRAN (R 4.4.1)\n rlang              1.1.4      2024-06-04 [1] CRAN (R 4.4.0)\n rliger           * 2.0.1      2024-04-04 [1] CRAN (R 4.4.0)\n rmarkdown          2.28       2024-08-17 [1] CRAN (R 4.4.0)\n ROCR               1.0-11     2020-05-02 [1] CRAN (R 4.4.0)\n RSpectra           0.16-2     2024-07-18 [1] CRAN (R 4.4.0)\n Rtsne              0.17       2023-12-07 [1] CRAN (R 4.4.0)\n S4Vectors          0.42.1     2024-07-03 [1] Bioconduc~\n sandwich           3.1-1      2024-09-15 [1] CRAN (R 4.4.1)\n scales             1.3.0      2023-11-28 [1] CRAN (R 4.4.0)\n scattermore        1.2        2023-06-12 [1] CRAN (R 4.4.0)\n sccore             1.0.5      2024-02-23 [1] CRAN (R 4.4.0)\n sctransform        0.4.1      2023-10-19 [1] CRAN (R 4.4.0)\n sessioninfo        1.2.2      2021-12-06 [1] CRAN (R 4.4.0)\n Seurat           * 5.1.0      2024-05-10 [1] CRAN (R 4.4.0)\n SeuratObject     * 5.0.2      2024-05-08 [1] CRAN (R 4.4.0)\n shapefiles       * 0.7.2      2022-08-25 [1] CRAN (R 4.4.0)\n shiny              1.9.1      2024-08-01 [1] CRAN (R 4.4.0)\n sn                 2.1.1      2023-04-04 [1] CRAN (R 4.4.0)\n sp               * 2.1-4      2024-04-30 [1] CRAN (R 4.4.0)\n spam               2.11-0     2024-10-03 [1] CRAN (R 4.4.1)\n spatstat.data      3.1-2      2024-06-21 [1] CRAN (R 4.4.0)\n spatstat.explore   3.3-3      2024-10-22 [1] CRAN (R 4.4.1)\n spatstat.geom      3.3-3      2024-09-18 [1] CRAN (R 4.4.1)\n spatstat.random    3.3-2      2024-09-18 [1] CRAN (R 4.4.1)\n spatstat.sparse    3.1-0      2024-06-21 [1] CRAN (R 4.4.0)\n spatstat.univar    3.0-1      2024-09-05 [1] CRAN (R 4.4.1)\n spatstat.utils     3.1-0      2024-08-17 [1] CRAN (R 4.4.0)\n statmod            1.5.0      2023-01-06 [1] CRAN (R 4.4.0)\n stringi            1.8.4      2024-05-06 [1] CRAN (R 4.4.0)\n stringr            1.5.1      2023-11-14 [1] CRAN (R 4.4.0)\n survival           3.6-4      2024-04-24 [1] CRAN (R 4.4.1)\n tensor             1.5        2012-05-05 [1] CRAN (R 4.4.0)\n TFisher            0.2.0      2018-03-21 [1] CRAN (R 4.4.0)\n TH.data            1.1-2      2023-04-17 [1] CRAN (R 4.4.0)\n tibble             3.2.1      2023-03-20 [1] CRAN (R 4.4.0)\n tidyr              1.3.1      2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect         1.2.1      2024-03-11 [1] CRAN (R 4.4.0)\n urlchecker         1.0.1      2021-11-30 [1] CRAN (R 4.4.0)\n usethis            3.0.0      2024-07-29 [1] CRAN (R 4.4.0)\n utf8               1.2.4      2023-10-22 [1] CRAN (R 4.4.0)\n uwot               0.2.2      2024-04-21 [1] CRAN (R 4.4.0)\n vctrs              0.6.5      2023-12-01 [1] CRAN (R 4.4.0)\n vipor              0.4.7      2023-12-18 [1] CRAN (R 4.4.0)\n viridisLite        0.4.2      2023-05-02 [1] CRAN (R 4.4.0)\n withr              3.0.2      2024-10-28 [1] CRAN (R 4.4.1)\n xfun               0.48       2024-10-03 [1] CRAN (R 4.4.1)\n xtable             1.8-4      2019-04-21 [1] CRAN (R 4.4.0)\n zoo                1.8-12     2023-04-13 [1] CRAN (R 4.4.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/Rstudio.html",
    "href": "content/Rstudio.html",
    "title": "RStudio",
    "section": "",
    "text": "Rstudio offers a graphical interface to facilitate the interaction between a user and an underlying programming language (this is sometimes called IDE, or integrated development environment). It can be very useful when a user is not necessarily proficent with command line-based computing. However, such graphical interfaces are not always able to connect to services such as AWS.\nSince most of the preliminary analysis we do is on AWS, we’d like to be able to use Rtudio directly from there. To do that, simply go to the following address:\n\n\nhttp://54.191.190.243:8787\n\n\nDon’t forget, you can run a bash terminal from within RStudio! This may come handy if you want to process some data with cellranger, for example. To do this, simply click on the terminal button next on the bottom left panel. You should now be in your own ${home} directory (~)."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#connect-to-rstudio-server",
    "href": "content/day1/Lab1_Intro.html#connect-to-rstudio-server",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.1 Connect to RStudio Server",
    "text": "3.1 Connect to RStudio Server\nMost of single-cell RNA-seq analysis takes place either in python or in R. Here, we focus on how to leverage R to investigate scRNAseq data. RStudio is an IDE (Integrated Development Environment, in other words: a nice graphical interface to run R-related commands).\nFor this workshop, we have installed R and RStudio on AWS. We can directly use RStudio (actually, RStudio-server since it is installed on an AWS remote server). Simply open a browser and copy-paste the following address:\n\n\nhttp://54.201.107.53:8787\n\n\nAn RStudio log in page will appear; to log in, use your user ID for both ID and password.\nNotice how when you log in Rstudio, there are multiple panels. Familiarize yourself with the different panels.\nThe interactive R console is generally found in the bottom left corner of RStudio(though it may be in another corner sometimes). All the rest (history panel, environment panel, directory explorer panel, editor panel) are extra features provided by RStudio.\n\n\n\n\n\n\nSome useful commands in R:\n\n\n\nWithin the R console, you can safely use R-dedicated commands. Do you know the most common ones? The semantics are a different from the terminal commands you may be used to…\n\n\n\nR\n\ngetwd() # equivalent of `pwd` in terminal\ndir.create('~/data/') # equivalent of `mkdir ~/data/` in terminal\nsetwd(\"~/data/\") # equivalent of `cd ~/data/` in terminal\nlist.files(\"~/data/\") # equivalent of `ls` in terminal\ndownload.file(\"...\") # equivalent of `wget ...` in terminal"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "href": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.2 Use a AWS terminal within RStudio",
    "text": "3.2 Use a AWS terminal within RStudio\nA general issue with bioinformatic analyses stems from the fact that nobody works in the same environment:\n\nAre you working on Mac? Linux? Windows?\nDo you have a lot of computational power? Perhaps a GPU card?\nAre you connected to the Internet? With a fast connection? Are you working behind a proxy?\n\nTo ensure that we are all working in the same environment, we rely on AWS (Amazon Web Services) EC2 (Elastic Cloud 2) instances. EC2 instances are “virtual” computers to which you can connect remotely, from a local computer.\nThe instance is common for everybody. We are thus all sharing the same “computer”; this means:\n\nShared resources\nSame access to shared files\nSame access to system-wide softwares and conda environments\n\nThe easiest way for us to launch bash commands from a terminal in AWS is to do it through RStudio: You can open up a terminal directly from within RStudio as follow: go to Tools &gt; Terminal &gt; New terminal. This should open up a new tab in the bottom left corner (next to the R console).\n\n\n\n\n\n\nR console versus terminal:\n\n\n\nFrom here onwards, be sure you completely understand the difference between “R console” and “terminal (or shell)”. They are entirely different things, and can be both accessed within RStudio. It is crucial you understand the difference between the two to not get confused for the rest of the course."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "href": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.3 Basic terminal commands",
    "text": "3.3 Basic terminal commands\nThe same bash commands are available in AWS terminal, regardless of whether you access the terminal from RStudio or through ssh.\nOne can list files, download files, check help pages, …, just like in R.\n\nCheck the your present directory\n\n\n\n\nbash\n\npwd\n\n\n\nCheck history\n\n\n\n\nbash\n\nhistory\n\n\n\nput history into a history.txt file\n\n\n\n\nbash\n\nhistory &gt; history.txt\n\n\n\nmake a new folder called data\n\n\n\n\nbash\n\nmkdir data\n\n\n\nGo to the new data directory\n\n\n\n\nbash\n\ncd data\n\n\n\nmove history.txt file into data directory\n\n\n\n\nbash\n\nmv ../history.txt ./\n\n\n\ncheck manual page of wget command (hit q to exit)\n\n\n\n\nbash\n\nman wget\n\n\n\ncheck specific help for cellranger command and subcommands\n\n\n\n\nbash\n\ncellranger --help\ncellranger count --help\n\n\n\nredirect wget help output into a file called cellranger-help.txt\n\n\n\n\n\nbash\n\ncellranger count --help &gt; cellranger-help.txt\n\n\n\nDownload a file from Internet with wget\n\n\n\n\n\nbash\n\nwget https://cf.10xgenomics.com/supp/cell-exp/cellranger-tiny-bcl-1.2.0.tar.gz\n\n\n\nList all files in a folder\n\n\n\n\nbash\n\nls -l ~/Share/\n\n\n\n\n\n\n\n\nTip\n\n\n\nDownload the git repository for this course from GitHub:\n\n\n\nbash\n\ngit clone https://github.com/js2264/scRNAseq_Physalia_2024.git\n\n\nThis downloads the repository for this course to your home folder on the AWS machine.\nTo get it on your local computer (to save the lectures and exercises), go to the GitHub repo page, click on the green Code button, then Download ZIP. Beware, the download may take a significant time based on your internet connection (several hundreds MB)."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "href": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.4 Single-cell RNA-seq datasets",
    "text": "3.4 Single-cell RNA-seq datasets\n\n“This is a course about single-cell RNA-seq analysis, after all, so where is my data?”\n\nOk, “your” data is (most likely) yet to be sequenced! Or maybe you’re interested in digging already existing databases! I mean, who isn’t interested in this mind-blowing achievement from 10X Genomics??\nHuman Cell Atlas is probably a good place to start digging, if you are interested in mammal-related studies. For instance, let’s say I am interested in epididymis differentiation. Boom: here is an entry from the HCA focusing on epididymis: link to HCA data portal.\n\n3.4.1 Raw fastq reads from GEO\nHere is the link to the actual paper studying epididymis:An atlas of human proximal epididymis reveals cell-specific functions and distinct roles for CFTR.\n\n\n\n\n\n\nQuestion\n\n\n\nFind and check out the corresponding GEO entries for this study. What type of sequencing data is available?\n\n\n\n\n\n\nTip\n\n\n\nHere is the link to the GEO page: link.\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you find links to download the raw data from this paper?\n\n\nThere are several ways to find this information, e.g. ffq command line tool, or using the web-based sra-explorer page (here). You generally will need the GEO corresponding ID or SRA project ID (e.g. SRPxxxxxx…).\n\n\n\n\n\n\nQuestion\n\n\n\nTry to install the ffq tool from the Patcher lab.\n\n\n\n\n\n\nInstalling conda packages\n\n\n\nconda-based environments allow easy installs of packages such as ffq. Your (base) conda environment should be active by default, and you will only have to type:\n\npip install ffq\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck ffq help and try fetching metadata for the GSE ID GSE148963.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nffq --help\nffq -t GSE GSE148963 &gt; GSE148963_search.txt\nhead -n 30 GSE148963_search.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you find the links to raw data associated with the GSE148963 GEO ID?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nYou can use a grep command: grep returns the lines which match a given pattern (e.g. a link…)!\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt\n\n\nAnd with a bit of sed magick…\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt | sed 's,.*ftp:,ftp:,' | sed 's,\".*,,' | grep \".fastq\" &gt; GSE148963_fastqlist.txt\n## `ffq` looks through GEO repository to fing metadata associated with the `GSE148963` entry (including downloading links)\n## grep 'ftp://' recovers the text lines that contain downloading links\n## the `sed` commands clean up the text lines\n## the `wget` command downloads locally the links listed in the generated file (GSE148963_fastqlist.txt)\n# wget -i GSE148963_fastqlist.txt ## Do not run, it would take too long...\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nA subset of the reads has been downloaded and put in the ~/Share/ folder. Have a look at it!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nzcat ~/Share/SRR11575369_1.fq.gz | head -n 12\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry and understand the structure of the fq.gz file. What is the meaning of each line?\nHow many reads are there in the fq.gz file? And how long are they? Can you get a summary of what is in this file? All of these questions can be quickly answered using the seqkit tool:\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nseqkit --help\nseqkit stats --help\nseqkit stat ~/Share/SRR11575369_1.fq.gz\n\n\n\n\n\n\n\n\n3.4.2 Processed count matrices\nMany times, researchers will provide a filtered count matrix when they publish scRNAseq experiments (along with mandatory raw fastq data, of course). It’s way lighter than fastq reads, and you can go ahead with downstream analyses a lot quicker. So how do you get these matrices? Human Cell Atlas Consortium provides many processed datasets. For instance, in our case, the Leir et al study is available at the following link. GEO also hosts processed files.\n\nFind GEO-hosted processed files for the Leir et al study. \n\nYou can download some of the processed files available in GEO from the following webpage. Scrolling down to the bottom of the page, there is a box labelled “Supplementary data”. By clicking on “(custom)”, a list of extra supplementary files will appear.\n\nDownload and check the content of the count matrix, the genes and the barcodes files. \nWhat type of information does each file contain? How is it formatted? is it easily imported in R? \nHow many cells were sequenced? How many genes were counted? \nIs it easy to interpret the count matrix? Why is it in such format? \nComment on the file sizes between processed count matrix files and raw reads."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#bonus",
    "href": "content/day1/Lab1_Intro.html#bonus",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.5 Bonus",
    "text": "3.5 Bonus\nFor those of you who are already familiar with the basics, you can fast-forward through this lab and start working on scRNAseq data directly. The script in bin/prepare_Ernst.R is a template to process a publicly available scRNAseq dataset. You can start exploring it to see if you understsand the different chunks of code and their importance. All the content from this template will eventually be covered in the next labs."
  },
  {
    "objectID": "content/program.html#monday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#monday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Monday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Monday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 1 - Introduction to scRNA-Seq analysis [Jacques]\n\nGeneral introduction: cell atlas overviews\nComparison of bulk and single cell RNA-Seq\nOverview of available scRNA-seq technologies (10x) and experimental protocols\n\n\n\nLecture 2 - From sequencing reads to expression matrices [Jacques]\n\nscRNA-Seq processing workflow starting with choice of sequencer (NextSeq, HiSeq, MiSeq) / barcode swapping and bcl files\nOverview of Popular tools and algorithms\nCommon single-cell analyses and interpretation\nSequencing data: alignment and quality control\nIGV: Looking at cool things in alignment like where reads are, mutations, splicing\n\n\n\nLab 1 - Familiarizing yourself with the course AWS instance [Jacques]\n\nUsing RStudio\nLogging in AWS\nShell and Unix commands to navigate directories, create folders, open files\nRaw file formats\nGet data from 10x website, single cell portal, from GEO (fastqs, counts)\n\n\n\nLab 2 - From sequencing reads to expression matrices [Fabricio]\n\nMapping sequencing data with Cellranger\nQuality Control reports (CellRanger, dropEst, fastqc)"
  },
  {
    "objectID": "content/program.html#tuesday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#tuesday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Tuesday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Tuesday - Classes from 14:00 to 20:00 (Paris time)\n\nFlash talks [Everybody]\n\n\nLecture 3 - Quality control for scRNA-Seq data [Jacques]\n\nWhat CellRanger does for quality filtering\nNormalisation methods\nDoublets, empty droplets, DropletUtils\nBarcode swapping\nRegression with technical covariates\n\n\n\nLab 3 - Introduction to R/Bioconductor [Fabricio]\n\nInstalling packages with CRAN and Bioconductor\nData types, data manipulation, slicing\nI/O for scRNAseq analysis in R\n\n\n\nLab 4 - scRNA-Seq data wrangling [Fabricio]\n\nData structure\nData filtering\nExploratory data analysis"
  },
  {
    "objectID": "content/program.html#wednesday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#wednesday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Wednesday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Wednesday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 4 - Identifying cell populations [Jacques]\n\nFeature selection\nDimensionality reduction\nGraph-based clustering and other cluster methods\nAssigning cluster identity\nDifferential expression tests\n\n\n\nLab 5 - Identifying Cell Populations: dimensionality reduction, clustering and annotation [Jacques]\n\nFeature selection\nDimensional reduction\nGraph-based clustering\nMarker gene detection\nCell type annotation\nData visualization\n\n\n\nLecture 5 - Data integration and batch effect correction [Orr]\n\nBatch correction methods (regress out batch, scaling within batch, Seurat v3, MNN, Liger, Harmony, scvi, scgen)\nEvaluation methods for batch correction (ARI, average silhouette width, kBET…)\n\n\n\nLab 6 - Data integration and batch effect correction [Orr]\n\nComparison of batch correction methods\nChoosing the optimal batch correction approach"
  },
  {
    "objectID": "content/program.html#thursday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#thursday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Thursday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Thursday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 6 - Advances in single-cell genomics: the epigenome [Orr]\n\n\nLab 7 - Single-cell ATAC-Seq analysis [Orr]\n\n\nLecture 7 - Trajectories and pseudotimes [Orr]\n\nTrajectory inference\nPopular tools and packages for trajectory analysis (https://github.com/dynverse/dynmethods#list-of-included-methods)\nPseudotime inference\nRNA velocity\nDifferential expression through pseudotime\n\n\n\nLab 8 - Inferring differentiation trajectories and pseudotime [Fabricio]\n\nInfering trajectory in sperm cell lineage\nOrientating a trajectory with RNA veloctiy\nDE analysis along a trajectory"
  },
  {
    "objectID": "content/program.html#friday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#friday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Friday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Friday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 8 - Advances in single-cell genomics: spatial transcriptomics [Orr]\nFriday will then be divided in two parts:\n\nMorning & afternoon (1h + 1h30): Group projects: analysing scRNA-seq data by yourself, from A to Z\nAfternoon (1h): Group presentations (10’ each group, max 5 slides: what/why/where/when/how, conclusions)\n\nHappy hour time!!"
  }
]